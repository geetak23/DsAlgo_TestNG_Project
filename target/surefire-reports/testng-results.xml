<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="12" ignored="12" total="332" passed="291" failed="10" skipped="7">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-16T18:20:11 CST" name="Suite_Parallel" finished-at="2024-11-16T18:23:50 CST" duration-ms="219441">
    <groups>
    </groups>
    <test started-at="2024-11-16T18:20:11 CST" name="Test Parallel Home and Dashboard modules.Browser:Chrome" finished-at="2024-11-16T18:20:44 CST" duration-ms="33092">
      <class name="pageTestEvents.LandingPageEvents">
        <test-method is-config="true" signature="openLandingPage()[pri:0, instance:pageTestEvents.LandingPageEvents@25f7391e]" started-at="2024-11-16T18:20:14 CST" name="openLandingPage" finished-at="2024-11-16T18:20:14 CST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLandingPage -->
        <test-method signature="testHomePageTitle()[pri:1, instance:pageTestEvents.LandingPageEvents@25f7391e]" started-at="2024-11-16T18:20:14 CST" name="testHomePageTitle" finished-at="2024-11-16T18:20:14 CST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomePageTitle -->
        <test-method signature="getStartedBtn()[pri:2, instance:pageTestEvents.LandingPageEvents@25f7391e]" started-at="2024-11-16T18:20:14 CST" name="getStartedBtn" finished-at="2024-11-16T18:20:37 CST" duration-ms="22219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedBtn -->
        <test-method is-config="true" signature="checknav_dsportal()[pri:0, instance:pageTestEvents.LandingPageEvents@25f7391e]" started-at="2024-11-16T18:20:37 CST" name="checknav_dsportal" finished-at="2024-11-16T18:20:37 CST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checknav_dsportal -->
      </class> <!-- pageTestEvents.LandingPageEvents -->
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@6b5966e1]" started-at="2024-11-16T18:20:11 CST" name="setUP" finished-at="2024-11-16T18:20:14 CST" duration-ms="2977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@6b5966e1]" started-at="2024-11-16T18:20:44 CST" name="tearDown" finished-at="2024-11-16T18:20:44 CST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
      <class name="pageTestEvents.DashBoardPageEvents">
        <test-method is-config="true" signature="dsportalDashBoardWithoutSignIn()[pri:0, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:37 CST" name="dsportalDashBoardWithoutSignIn" finished-at="2024-11-16T18:20:37 CST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dsportalDashBoardWithoutSignIn -->
        <test-method signature="chkPageTitle()[pri:3, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:37 CST" name="chkPageTitle" finished-at="2024-11-16T18:20:37 CST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chkPageTitle -->
        <test-method signature="validateDsAlgoDropdownItems()[pri:4, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:37 CST" name="validateDsAlgoDropdownItems" finished-at="2024-11-16T18:20:38 CST" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDsAlgoDropdownItems -->
        <test-method signature="validateDsAlgoButtons()[pri:5, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:38 CST" name="validateDsAlgoButtons" finished-at="2024-11-16T18:20:38 CST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDsAlgoButtons -->
        <test-method signature="validateRegister()[pri:6, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:38 CST" name="validateRegister" finished-at="2024-11-16T18:20:39 CST" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRegister -->
        <test-method signature="testDSwithoutSignIn(java.util.Map)[pri:7, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:39 CST" name="testDSwithoutSignIn" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:39 CST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Arrays, index=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDSwithoutSignIn -->
        <test-method signature="testDSwithoutSignIn(java.util.Map)[pri:7, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:39 CST" name="testDSwithoutSignIn" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:39 CST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Linked List, index=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDSwithoutSignIn -->
        <test-method signature="testDSwithoutSignIn(java.util.Map)[pri:7, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:39 CST" name="testDSwithoutSignIn" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:40 CST" duration-ms="332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Stack, index=2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDSwithoutSignIn -->
        <test-method signature="testDSwithoutSignIn(java.util.Map)[pri:7, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:40 CST" name="testDSwithoutSignIn" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:40 CST" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Queue, index=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDSwithoutSignIn -->
        <test-method signature="testDSwithoutSignIn(java.util.Map)[pri:7, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:40 CST" name="testDSwithoutSignIn" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:40 CST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Tree, index=4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDSwithoutSignIn -->
        <test-method signature="testDSwithoutSignIn(java.util.Map)[pri:7, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:40 CST" name="testDSwithoutSignIn" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:40 CST" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Graph, index=5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDSwithoutSignIn -->
        <test-method signature="validateSignIn()[pri:8, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:40 CST" name="validateSignIn" finished-at="2024-11-16T18:20:40 CST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSignIn -->
        <test-method signature="userSignIn()[pri:9, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:40 CST" name="userSignIn" finished-at="2024-11-16T18:20:42 CST" duration-ms="1211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userSignIn -->
        <test-method signature="testDataStructures(java.util.Map)[pri:10, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:42 CST" name="testDataStructures" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:42 CST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Arrays, index=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStructures -->
        <test-method signature="testDataStructures(java.util.Map)[pri:10, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:42 CST" name="testDataStructures" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:42 CST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Linked List, index=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStructures -->
        <test-method signature="testDataStructures(java.util.Map)[pri:10, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:42 CST" name="testDataStructures" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:42 CST" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Stack, index=2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStructures -->
        <test-method signature="testDataStructures(java.util.Map)[pri:10, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:42 CST" name="testDataStructures" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:43 CST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Queue, index=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStructures -->
        <test-method signature="testDataStructures(java.util.Map)[pri:10, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:43 CST" name="testDataStructures" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:43 CST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Tree, index=4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStructures -->
        <test-method signature="testDataStructures(java.util.Map)[pri:10, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:43 CST" name="testDataStructures" data-provider="dataStructuresProvider" finished-at="2024-11-16T18:20:43 CST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{type=Graph, index=5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStructures -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.DashBoardPageEvents@3f23a3a0]" started-at="2024-11-16T18:20:43 CST" name="Logout" finished-at="2024-11-16T18:20:44 CST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.DashBoardPageEvents -->
    </test> <!-- Test Parallel Home and Dashboard modules.Browser:Chrome -->
    <test started-at="2024-11-16T18:20:11 CST" name="Test Parallel Stack module.Browser:Edge" finished-at="2024-11-16T18:21:12 CST" duration-ms="61160">
      <class name="pageTestEvents.StackPageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:37 CST" name="Login" finished-at="2024-11-16T18:20:40 CST" duration-ms="2864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:40 CST" name="stackPage" finished-at="2024-11-16T18:20:40 CST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="invalidTopics(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:40 CST" name="invalidTopics" data-provider="Invalid code topic no" finished-at="2024-11-16T18:20:43 CST" duration-ms="2308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:43 CST" name="backtostack" finished-at="2024-11-16T18:20:43 CST" duration-ms="603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:43 CST" name="stackPage" finished-at="2024-11-16T18:20:44 CST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="invalidTopics(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:44 CST" name="invalidTopics" data-provider="Invalid code topic no" finished-at="2024-11-16T18:20:45 CST" duration-ms="1212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:45 CST" name="backtostack" finished-at="2024-11-16T18:20:45 CST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:45 CST" name="stackPage" finished-at="2024-11-16T18:20:46 CST" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="invalidTopics(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:46 CST" name="invalidTopics" data-provider="Invalid code topic no" finished-at="2024-11-16T18:20:47 CST" duration-ms="1232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:47 CST" name="backtostack" finished-at="2024-11-16T18:20:47 CST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:47 CST" name="stackPage" finished-at="2024-11-16T18:20:48 CST" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:48 CST" name="nocodeTopics" data-provider="Stack Topics" finished-at="2024-11-16T18:20:48 CST" duration-ms="783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:48 CST" name="backtostack" finished-at="2024-11-16T18:20:49 CST" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:49 CST" name="stackPage" finished-at="2024-11-16T18:20:49 CST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:49 CST" name="nocodeTopics" data-provider="Stack Topics" finished-at="2024-11-16T18:20:50 CST" duration-ms="735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:50 CST" name="backtostack" finished-at="2024-11-16T18:20:50 CST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:50 CST" name="stackPage" finished-at="2024-11-16T18:20:51 CST" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:51 CST" name="nocodeTopics" data-provider="Stack Topics" finished-at="2024-11-16T18:20:51 CST" duration-ms="823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:51 CST" name="backtostack" finished-at="2024-11-16T18:20:52 CST" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:52 CST" name="stackPage" finished-at="2024-11-16T18:20:52 CST" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="topicsStack(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:52 CST" name="topicsStack" data-provider="Stack Topics" finished-at="2024-11-16T18:20:53 CST" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsStack -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:53 CST" name="backtostack" finished-at="2024-11-16T18:20:53 CST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:53 CST" name="stackPage" finished-at="2024-11-16T18:20:54 CST" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="topicsStack(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:54 CST" name="topicsStack" data-provider="Stack Topics" finished-at="2024-11-16T18:20:54 CST" duration-ms="470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsStack -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:54 CST" name="backtostack" finished-at="2024-11-16T18:20:55 CST" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:55 CST" name="stackPage" finished-at="2024-11-16T18:20:55 CST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="topicsStack(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:55 CST" name="topicsStack" data-provider="Stack Topics" finished-at="2024-11-16T18:20:55 CST" duration-ms="434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsStack -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:55 CST" name="backtostack" finished-at="2024-11-16T18:20:56 CST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:56 CST" name="stackPage" finished-at="2024-11-16T18:20:56 CST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:56 CST" name="tryHereTopics" data-provider="Stack Topics" finished-at="2024-11-16T18:20:57 CST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:57 CST" name="backtostack" finished-at="2024-11-16T18:20:58 CST" duration-ms="479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:58 CST" name="stackPage" finished-at="2024-11-16T18:20:58 CST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:20:58 CST" name="tryHereTopics" data-provider="Stack Topics" finished-at="2024-11-16T18:21:00 CST" duration-ms="1794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:00 CST" name="backtostack" finished-at="2024-11-16T18:21:01 CST" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:01 CST" name="stackPage" finished-at="2024-11-16T18:21:01 CST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:01 CST" name="tryHereTopics" data-provider="Stack Topics" finished-at="2024-11-16T18:21:02 CST" duration-ms="860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:02 CST" name="backtostack" finished-at="2024-11-16T18:21:02 CST" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:03 CST" name="stackPage" finished-at="2024-11-16T18:21:03 CST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="validcodeTopics(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:03 CST" name="validcodeTopics" data-provider="Valid code topic no" finished-at="2024-11-16T18:21:04 CST" duration-ms="1307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:04 CST" name="backtostack" finished-at="2024-11-16T18:21:05 CST" duration-ms="531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:05 CST" name="stackPage" finished-at="2024-11-16T18:21:05 CST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="validcodeTopics(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:05 CST" name="validcodeTopics" data-provider="Valid code topic no" finished-at="2024-11-16T18:21:07 CST" duration-ms="2168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:07 CST" name="backtostack" finished-at="2024-11-16T18:21:08 CST" duration-ms="479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:08 CST" name="stackPage" finished-at="2024-11-16T18:21:08 CST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="validcodeTopics(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:08 CST" name="validcodeTopics" data-provider="Valid code topic no" finished-at="2024-11-16T18:21:10 CST" duration-ms="1350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:10 CST" name="backtostack" finished-at="2024-11-16T18:21:10 CST" duration-ms="434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.StackPageEvents@5990e6c5]" started-at="2024-11-16T18:21:10 CST" name="Logout" finished-at="2024-11-16T18:21:11 CST" duration-ms="470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.StackPageEvents -->
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@4a9cc6cb]" started-at="2024-11-16T18:20:11 CST" name="setUP" finished-at="2024-11-16T18:20:37 CST" duration-ms="25590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@4a9cc6cb]" started-at="2024-11-16T18:21:11 CST" name="tearDown" finished-at="2024-11-16T18:21:12 CST" duration-ms="1481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
    </test> <!-- Test Parallel Stack module.Browser:Edge -->
    <test started-at="2024-11-16T18:20:11 CST" name="Test Parallel Array module.Browser:FireFox" finished-at="2024-11-16T18:21:31 CST" duration-ms="79918">
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@644c78d4]" started-at="2024-11-16T18:20:11 CST" name="setUP" finished-at="2024-11-16T18:20:37 CST" duration-ms="25704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@644c78d4]" started-at="2024-11-16T18:21:30 CST" name="tearDown" finished-at="2024-11-16T18:21:31 CST" duration-ms="1168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
      <class name="pageTestEvents.ArrayPageEvents">
        <test-method is-config="true" signature="userSignIn()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:37 CST" name="userSignIn" finished-at="2024-11-16T18:20:39 CST" duration-ms="2142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userSignIn -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:39 CST" name="arrayPage" finished-at="2024-11-16T18:20:40 CST" duration-ms="843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:40 CST" name="invalidTopics" data-provider="invalidcode Arrays Topics" finished-at="2024-11-16T18:20:43 CST" duration-ms="3010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:43 CST" name="backtoArray" finished-at="2024-11-16T18:20:44 CST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:44 CST" name="arrayPage" finished-at="2024-11-16T18:20:44 CST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:44 CST" name="invalidTopics" data-provider="invalidcode Arrays Topics" finished-at="2024-11-16T18:20:46 CST" duration-ms="1902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:46 CST" name="backtoArray" finished-at="2024-11-16T18:20:47 CST" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:47 CST" name="arrayPage" finished-at="2024-11-16T18:20:48 CST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:48 CST" name="invalidTopics" data-provider="invalidcode Arrays Topics" finished-at="2024-11-16T18:20:49 CST" duration-ms="1711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:49 CST" name="backtoArray" finished-at="2024-11-16T18:20:50 CST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:50 CST" name="arrayPage" finished-at="2024-11-16T18:20:51 CST" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:51 CST" name="invalidTopics" data-provider="invalidcode Arrays Topics" finished-at="2024-11-16T18:20:52 CST" duration-ms="1671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:52 CST" name="backtoArray" finished-at="2024-11-16T18:20:53 CST" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:53 CST" name="arrayPage" finished-at="2024-11-16T18:20:54 CST" duration-ms="892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="topicsArray(int,java.lang.String)[pri:1, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:54 CST" name="topicsArray" data-provider="Array Topics" finished-at="2024-11-16T18:20:54 CST" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arrays in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsArray -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:54 CST" name="backtoArray" finished-at="2024-11-16T18:20:55 CST" duration-ms="699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:55 CST" name="arrayPage" finished-at="2024-11-16T18:20:56 CST" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="topicsArray(int,java.lang.String)[pri:1, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:56 CST" name="topicsArray" data-provider="Array Topics" finished-at="2024-11-16T18:20:56 CST" duration-ms="540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arrays Using List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsArray -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:56 CST" name="backtoArray" finished-at="2024-11-16T18:20:57 CST" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:57 CST" name="arrayPage" finished-at="2024-11-16T18:20:58 CST" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="topicsArray(int,java.lang.String)[pri:1, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:58 CST" name="topicsArray" data-provider="Array Topics" finished-at="2024-11-16T18:20:59 CST" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Basic Operations in Lists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsArray -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:59 CST" name="backtoArray" finished-at="2024-11-16T18:20:59 CST" duration-ms="602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:20:59 CST" name="arrayPage" finished-at="2024-11-16T18:21:00 CST" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="topicsArray(int,java.lang.String)[pri:1, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:00 CST" name="topicsArray" data-provider="Array Topics" finished-at="2024-11-16T18:21:00 CST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsArray -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:00 CST" name="backtoArray" finished-at="2024-11-16T18:21:01 CST" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:01 CST" name="arrayPage" finished-at="2024-11-16T18:21:01 CST" duration-ms="660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:2, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:01 CST" name="tryHereTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:03 CST" duration-ms="1847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arrays in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:03 CST" name="backtoArray" finished-at="2024-11-16T18:21:04 CST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:04 CST" name="arrayPage" finished-at="2024-11-16T18:21:04 CST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:2, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:04 CST" name="tryHereTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:06 CST" duration-ms="1415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arrays Using List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:06 CST" name="backtoArray" finished-at="2024-11-16T18:21:07 CST" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:07 CST" name="arrayPage" finished-at="2024-11-16T18:21:07 CST" duration-ms="655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:2, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:07 CST" name="tryHereTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:09 CST" duration-ms="1313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Basic Operations in Lists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:09 CST" name="backtoArray" finished-at="2024-11-16T18:21:09 CST" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:09 CST" name="arrayPage" finished-at="2024-11-16T18:21:10 CST" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:2, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:10 CST" name="tryHereTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:12 CST" duration-ms="2273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:12 CST" name="backtoArray" finished-at="2024-11-16T18:21:13 CST" duration-ms="822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:13 CST" name="arrayPage" finished-at="2024-11-16T18:21:14 CST" duration-ms="713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:4, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:14 CST" name="nocodeTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:16 CST" duration-ms="2172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arrays in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:16 CST" name="backtoArray" finished-at="2024-11-16T18:21:17 CST" duration-ms="1038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:17 CST" name="arrayPage" finished-at="2024-11-16T18:21:18 CST" duration-ms="921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:4, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:18 CST" name="nocodeTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:20 CST" duration-ms="2054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Arrays Using List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:20 CST" name="backtoArray" finished-at="2024-11-16T18:21:21 CST" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:21 CST" name="arrayPage" finished-at="2024-11-16T18:21:21 CST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:4, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:21 CST" name="nocodeTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:24 CST" duration-ms="2166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Basic Operations in Lists]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:24 CST" name="backtoArray" finished-at="2024-11-16T18:21:24 CST" duration-ms="944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:24 CST" name="arrayPage" finished-at="2024-11-16T18:21:25 CST" duration-ms="705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:4, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:25 CST" name="nocodeTopics" data-provider="Array Topics" finished-at="2024-11-16T18:21:27 CST" duration-ms="1572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Array]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:27 CST" name="backtoArray" finished-at="2024-11-16T18:21:27 CST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:27 CST" name="arrayPage" finished-at="2024-11-16T18:21:28 CST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:5, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:28 CST" name="validcodeTopics" data-provider="validcode Arrays Topics" finished-at="2024-11-16T18:21:30 CST" duration-ms="1399" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Hello] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Hello] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.ArrayPageEvents.validcodeTopics(ArrayPageEvents.java:77)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="13" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:5, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="validcodeTopics" data-provider="validcode Arrays Topics" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:5, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="validcodeTopics" data-provider="validcode Arrays Topics" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:5, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="validcodeTopics" data-provider="validcode Arrays Topics" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="getArrayTopicCodeExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="getArrayTopicCodeExcelData" data-provider="getArrayTopicCodeExcelData" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arrays in Python]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArrayTopicCodeExcelData -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="getArrayTopicCodeExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="getArrayTopicCodeExcelData" data-provider="getArrayTopicCodeExcelData" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Arrays Using List]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArrayTopicCodeExcelData -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="getArrayTopicCodeExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="getArrayTopicCodeExcelData" data-provider="getArrayTopicCodeExcelData" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Basic Operations in Lists]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArrayTopicCodeExcelData -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="arrayPage()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="arrayPage" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method signature="getArrayTopicCodeExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="getArrayTopicCodeExcelData" data-provider="getArrayTopicCodeExcelData" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Applications of Array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[text()='Data Structures']
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [c16d38b2-4666-4bec-a5cd-ccc5e59980bf, findElement {using=xpath, value=//a[text()='Data Structures']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 132.0.2, moz:accessibilityChecks: false, moz:buildID: 20241110231641, moz:debuggerAddress: 127.0.0.1:8275, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 57208, moz:profile: C:\Users\geeta\AppData\Loca..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8275/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c16d38b2-4666-4bec-a5cd-ccc5e59980bf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at pageObjects.ArrayPage.backToArray(ArrayPage.java:208)
at pageTestEvents.ArrayPageEvents.backtoArray(ArrayPageEvents.java:134)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getArrayTopicCodeExcelData -->
        <test-method is-config="true" signature="backtoArray()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="backtoArray" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoArray -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.ArrayPageEvents@532a02d9]" started-at="2024-11-16T18:21:30 CST" name="Logout" finished-at="2024-11-16T18:21:30 CST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.ArrayPageEvents -->
    </test> <!-- Test Parallel Array module.Browser:FireFox -->
    <test started-at="2024-11-16T18:20:11 CST" name="Test Parallel SignIn and Register modules.Browser:Edge " finished-at="2024-11-16T18:22:16 CST" duration-ms="124724">
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@6b5176f2]" started-at="2024-11-16T18:20:11 CST" name="setUP" finished-at="2024-11-16T18:20:37 CST" duration-ms="25604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@6b5176f2]" started-at="2024-11-16T18:22:14 CST" name="tearDown" finished-at="2024-11-16T18:22:16 CST" duration-ms="1350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
      <class name="pageTestEvents.SignInPageEvents">
        <test-method is-config="true" signature="userSignIn()[pri:0, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:10 CST" name="userSignIn" finished-at="2024-11-16T18:22:11 CST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userSignIn -->
        <test-method signature="testPageTitle()[pri:10, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:11 CST" name="testPageTitle" finished-at="2024-11-16T18:22:11 CST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPageTitle -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:11 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:11 CST" duration-ms="568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Numpysdet175]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[user]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid Username and Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:11 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:12 CST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sdet175batch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid Username and Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:12 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:12 CST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Numpysdet175]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sdet175batch]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid Username and Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:12 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:13 CST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!!!@@##$$]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[!!!@@##$$$$$]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid Username and Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:13 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:13 CST" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please fill out this field.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:13 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:13 CST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qwer123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please fill out this field.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInInvalidData(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:13 CST" name="testSignInInvalidData" data-provider="getSignInInvalidData" finished-at="2024-11-16T18:22:14 CST" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Numpysdet175]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Please fill out this field.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInInvalidData -->
        <test-method signature="testSignInData(java.lang.String,java.lang.String,java.lang.String)[pri:12, instance:pageTestEvents.SignInPageEvents@b672aa8]" started-at="2024-11-16T18:22:14 CST" name="testSignInData" data-provider="getSignInValidData" finished-at="2024-11-16T18:22:14 CST" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[You are logged in]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignInData -->
      </class> <!-- pageTestEvents.SignInPageEvents -->
      <class name="pageTestEvents.RegisterPageEvents">
        <test-method is-config="true" signature="registerWithoutSignIn()[pri:0, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:37 CST" name="registerWithoutSignIn" finished-at="2024-11-16T18:20:38 CST" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutSignIn -->
        <test-method signature="testPageTitle()[pri:8, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:38 CST" name="testPageTitle" finished-at="2024-11-16T18:20:38 CST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPageTitle -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:40 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:20:42 CST" duration-ms="2497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please enter User Name, Password and Confirm Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:42 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:20:45 CST" duration-ms="2680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please fill out this field. below User Name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:45 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:20:47 CST" duration-ms="2427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please fill out this field.below Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:47 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:20:50 CST" duration-ms="2420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please fill out this field.below Confirm Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:50 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:20:54 CST" duration-ms="4663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176!]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password_mismatch:The two password fields didn’t match.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:54 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:20:58 CST" duration-ms="3883" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length doesnot meet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistration(RegisterPageEvents.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method retried="true" signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:20:58 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:21:02 CST" duration-ms="3769" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user already exists]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistration(RegisterPageEvents.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method retried="true" signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:02 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:21:06 CST" duration-ms="3929" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user already exists]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistration(RegisterPageEvents.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method retried="true" signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:06 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:21:10 CST" duration-ms="3645" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user already exists]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistration(RegisterPageEvents.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistration(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:10 CST" name="testUserRegistration" data-provider="getRegistrationExcelData" finished-at="2024-11-16T18:21:13 CST" duration-ms="3562" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user already exists]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user already exists] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistration(RegisterPageEvents.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistration -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:13 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:15 CST" duration-ms="2367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please enter User Name, Password and Confirm Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:16 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:19 CST" duration-ms="3589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please fill out this field. below User Name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:19 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:22 CST" duration-ms="2524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please fill out this field.below Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:22 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:24 CST" duration-ms="2505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Please fill out this field.below Confirm Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:24 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:29 CST" duration-ms="4731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Numpysdet176]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Numpysdet176!]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password_mismatch:The two password fields didn’t match.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:29 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:32 CST" duration-ms="3279" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456789]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123456789]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password cannot be only numeric]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:32 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:35 CST" duration-ms="3307" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length doesnot meet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:35 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:39 CST" duration-ms="3267" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length doesnot meet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:39 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:42 CST" duration-ms="3282" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length doesnot meet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:42 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:45 CST" duration-ms="3140" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length doesnot meet]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length doesnot meet] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:45 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:48 CST" duration-ms="3137" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length is less than 8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:48 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:51 CST" duration-ms="3108" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length is less than 8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:51 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:55 CST" duration-ms="3118" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length is less than 8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:55 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:21:58 CST" duration-ms="3180" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Scrutinizers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[password length is less than 8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [password length is less than 8] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:21:58 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:22:01 CST" duration-ms="3201" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[123123412]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user name cannot be only numeric]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:22:01 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:22:04 CST" duration-ms="3142" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[123123412]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user name cannot be only numeric]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method retried="true" signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:22:04 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:22:07 CST" duration-ms="3189" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[123123412]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user name cannot be only numeric]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
        <test-method signature="testUserRegistrationjson(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:pageTestEvents.RegisterPageEvents@2fab4aff]" started-at="2024-11-16T18:22:07 CST" name="testUserRegistrationjson" data-provider="getInvalidRegistrationStaticData" finished-at="2024-11-16T18:22:10 CST" duration-ms="3191" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[123123412]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123sA]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123sa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[user name cannot be only numeric]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [user name cannot be only numeric] but found [password_mismatch:The two password fields didn’t match.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.RegisterPageEvents.registerUser(RegisterPageEvents.java:42)
at pageTestEvents.RegisterPageEvents.testUserRegistrationjson(RegisterPageEvents.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserRegistrationjson -->
      </class> <!-- pageTestEvents.RegisterPageEvents -->
    </test> <!-- Test Parallel SignIn and Register modules.Browser:Edge  -->
    <test started-at="2024-11-16T18:20:45 CST" name="Test Parallel Queue module.Browser:chrome" finished-at="2024-11-16T18:22:37 CST" duration-ms="112668">
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@6cea706c]" started-at="2024-11-16T18:20:45 CST" name="setUP" finished-at="2024-11-16T18:20:47 CST" duration-ms="2634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@6cea706c]" started-at="2024-11-16T18:22:37 CST" name="tearDown" finished-at="2024-11-16T18:22:37 CST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
      <class name="pageTestEvents.QueuePageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:47 CST" name="Login" finished-at="2024-11-16T18:20:49 CST" duration-ms="1463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:49 CST" name="queuePage" finished-at="2024-11-16T18:20:49 CST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:49 CST" name="arrayPage" finished-at="2024-11-16T18:20:50 CST" duration-ms="588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:50 CST" name="backtoQueue" finished-at="2024-11-16T18:20:50 CST" duration-ms="450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:50 CST" name="queuePage" finished-at="2024-11-16T18:20:51 CST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:51 CST" name="arrayPageT1" finished-at="2024-11-16T18:20:52 CST" duration-ms="989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:52 CST" name="backtoQueue" finished-at="2024-11-16T18:20:52 CST" duration-ms="587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:52 CST" name="queuePage" finished-at="2024-11-16T18:20:53 CST" duration-ms="448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:53 CST" name="arrayPageT2" finished-at="2024-11-16T18:20:54 CST" duration-ms="1444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:54 CST" name="backtoQueue" finished-at="2024-11-16T18:20:55 CST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:55 CST" name="queuePage" finished-at="2024-11-16T18:20:56 CST" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:56 CST" name="arrayPageT3" finished-at="2024-11-16T18:20:57 CST" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:57 CST" name="backtoQueue" finished-at="2024-11-16T18:20:58 CST" duration-ms="802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:58 CST" name="queuePage" finished-at="2024-11-16T18:20:58 CST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:58 CST" name="arrayPageT4" finished-at="2024-11-16T18:20:59 CST" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:20:59 CST" name="backtoQueue" finished-at="2024-11-16T18:21:00 CST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:00 CST" name="queuePage" finished-at="2024-11-16T18:21:00 CST" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:00 CST" name="graphPage" finished-at="2024-11-16T18:21:01 CST" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:01 CST" name="backtoQueue" finished-at="2024-11-16T18:21:02 CST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:02 CST" name="queuePage" finished-at="2024-11-16T18:21:02 CST" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:02 CST" name="graphPageT1" finished-at="2024-11-16T18:21:04 CST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:04 CST" name="backtoQueue" finished-at="2024-11-16T18:21:04 CST" duration-ms="495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:04 CST" name="queuePage" finished-at="2024-11-16T18:21:05 CST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:05 CST" name="graphPageT2" finished-at="2024-11-16T18:21:06 CST" duration-ms="1181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:06 CST" name="backtoQueue" finished-at="2024-11-16T18:21:06 CST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:06 CST" name="queuePage" finished-at="2024-11-16T18:21:07 CST" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:07 CST" name="graphPageT3" finished-at="2024-11-16T18:21:08 CST" duration-ms="1019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:08 CST" name="backtoQueue" finished-at="2024-11-16T18:21:08 CST" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:08 CST" name="queuePage" finished-at="2024-11-16T18:21:09 CST" duration-ms="546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:09 CST" name="graphPageT4" finished-at="2024-11-16T18:21:10 CST" duration-ms="1000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:10 CST" name="backtoQueue" finished-at="2024-11-16T18:21:11 CST" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:11 CST" name="queuePage" finished-at="2024-11-16T18:21:11 CST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="implementationofQueueinPythonTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:11 CST" name="implementationofQueueinPythonTopic" finished-at="2024-11-16T18:21:12 CST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementationofQueueinPythonTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:12 CST" name="backtoQueue" finished-at="2024-11-16T18:21:12 CST" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:12 CST" name="queuePage" finished-at="2024-11-16T18:21:13 CST" duration-ms="479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="implementationusingarrayTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:13 CST" name="implementationusingarrayTopic" finished-at="2024-11-16T18:21:13 CST" duration-ms="448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementationusingarrayTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:13 CST" name="backtoQueue" finished-at="2024-11-16T18:21:14 CST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:14 CST" name="queuePage" finished-at="2024-11-16T18:21:14 CST" duration-ms="667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="implementationusingcollectionsdequeTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:14 CST" name="implementationusingcollectionsdequeTopic" finished-at="2024-11-16T18:21:15 CST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementationusingcollectionsdequeTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:15 CST" name="backtoQueue" finished-at="2024-11-16T18:21:15 CST" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:15 CST" name="queuePage" finished-at="2024-11-16T18:21:16 CST" duration-ms="1018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT1(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:16 CST" name="invalidCodeT1" data-provider="codeDp" finished-at="2024-11-16T18:21:20 CST" duration-ms="3431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:20 CST" name="backtoQueue" finished-at="2024-11-16T18:21:20 CST" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:20 CST" name="queuePage" finished-at="2024-11-16T18:21:21 CST" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT2(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:21 CST" name="invalidCodeT2" data-provider="codeDp" finished-at="2024-11-16T18:21:22 CST" duration-ms="1428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:22 CST" name="backtoQueue" finished-at="2024-11-16T18:21:23 CST" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:23 CST" name="queuePage" finished-at="2024-11-16T18:21:24 CST" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT3(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:24 CST" name="invalidCodeT3" data-provider="codeDp" finished-at="2024-11-16T18:21:25 CST" duration-ms="1381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:25 CST" name="backtoQueue" finished-at="2024-11-16T18:21:25 CST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:25 CST" name="queuePage" finished-at="2024-11-16T18:21:26 CST" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT4(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:26 CST" name="invalidCodeT4" data-provider="codeDp" finished-at="2024-11-16T18:21:27 CST" duration-ms="1113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:27 CST" name="backtoQueue" finished-at="2024-11-16T18:21:27 CST" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:27 CST" name="queuePage" finished-at="2024-11-16T18:21:28 CST" duration-ms="368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:28 CST" name="linkedListPage" finished-at="2024-11-16T18:21:28 CST" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:28 CST" name="backtoQueue" finished-at="2024-11-16T18:21:29 CST" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:29 CST" name="queuePage" finished-at="2024-11-16T18:21:29 CST" duration-ms="456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:29 CST" name="linkedListPageT1" finished-at="2024-11-16T18:21:30 CST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:30 CST" name="backtoQueue" finished-at="2024-11-16T18:21:30 CST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:30 CST" name="queuePage" finished-at="2024-11-16T18:21:31 CST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:31 CST" name="linkedListPageT2" finished-at="2024-11-16T18:21:31 CST" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:31 CST" name="backtoQueue" finished-at="2024-11-16T18:21:32 CST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:32 CST" name="queuePage" finished-at="2024-11-16T18:21:32 CST" duration-ms="415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:32 CST" name="linkedListPageT3" finished-at="2024-11-16T18:21:33 CST" duration-ms="916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:33 CST" name="backtoQueue" finished-at="2024-11-16T18:21:33 CST" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:33 CST" name="queuePage" finished-at="2024-11-16T18:21:34 CST" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:34 CST" name="linkedListPageT4" finished-at="2024-11-16T18:21:35 CST" duration-ms="1195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:35 CST" name="backtoQueue" finished-at="2024-11-16T18:21:35 CST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:35 CST" name="queuePage" finished-at="2024-11-16T18:21:36 CST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:36 CST" name="nocodeTopic1" finished-at="2024-11-16T18:21:36 CST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:36 CST" name="backtoQueue" finished-at="2024-11-16T18:21:37 CST" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:37 CST" name="queuePage" finished-at="2024-11-16T18:21:37 CST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:37 CST" name="nocodeTopic2" finished-at="2024-11-16T18:21:38 CST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:38 CST" name="backtoQueue" finished-at="2024-11-16T18:21:38 CST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:38 CST" name="queuePage" finished-at="2024-11-16T18:21:39 CST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:39 CST" name="nocodeTopic3" finished-at="2024-11-16T18:21:39 CST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:39 CST" name="backtoQueue" finished-at="2024-11-16T18:21:40 CST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:40 CST" name="queuePage" finished-at="2024-11-16T18:21:40 CST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:40 CST" name="nocodeTopic4" finished-at="2024-11-16T18:21:41 CST" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:41 CST" name="backtoQueue" finished-at="2024-11-16T18:21:41 CST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:41 CST" name="queuePage" finished-at="2024-11-16T18:21:42 CST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="practiceQueTopic1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:42 CST" name="practiceQueTopic1" finished-at="2024-11-16T18:21:42 CST" duration-ms="514" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Queue] but found [Practice Questions]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Queue] but found [Practice Questions]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.QueuePageEvents.practiceQueTopic1(QueuePageEvents.java:110)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQueTopic1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:42 CST" name="backtoQueue" finished-at="2024-11-16T18:21:43 CST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:43 CST" name="queuePage" finished-at="2024-11-16T18:21:43 CST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:43 CST" name="queueDropPage" finished-at="2024-11-16T18:21:43 CST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:43 CST" name="backtoQueue" finished-at="2024-11-16T18:21:44 CST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:44 CST" name="queuePage" finished-at="2024-11-16T18:21:44 CST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:44 CST" name="queueDropPageT1" finished-at="2024-11-16T18:21:45 CST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:45 CST" name="backtoQueue" finished-at="2024-11-16T18:21:45 CST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:45 CST" name="queuePage" finished-at="2024-11-16T18:21:45 CST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:45 CST" name="queueDropPageT2" finished-at="2024-11-16T18:21:46 CST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:46 CST" name="backtoQueue" finished-at="2024-11-16T18:21:46 CST" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:46 CST" name="queuePage" finished-at="2024-11-16T18:21:47 CST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:47 CST" name="queueDropPageT3" finished-at="2024-11-16T18:21:47 CST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:47 CST" name="backtoQueue" finished-at="2024-11-16T18:21:47 CST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:47 CST" name="queuePage" finished-at="2024-11-16T18:21:48 CST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:48 CST" name="queueDropPageT4" finished-at="2024-11-16T18:21:48 CST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:48 CST" name="backtoQueue" finished-at="2024-11-16T18:21:49 CST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:49 CST" name="queuePage" finished-at="2024-11-16T18:21:49 CST" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueOperationsTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:49 CST" name="queueOperationsTopic" finished-at="2024-11-16T18:21:49 CST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueOperationsTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:49 CST" name="backtoQueue" finished-at="2024-11-16T18:21:50 CST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:50 CST" name="queuePage" finished-at="2024-11-16T18:21:50 CST" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:50 CST" name="stackPage" finished-at="2024-11-16T18:21:51 CST" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:51 CST" name="backtoQueue" finished-at="2024-11-16T18:21:51 CST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:51 CST" name="queuePage" finished-at="2024-11-16T18:21:51 CST" duration-ms="374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:51 CST" name="stackPageT1" finished-at="2024-11-16T18:21:52 CST" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:52 CST" name="backtoQueue" finished-at="2024-11-16T18:21:52 CST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:52 CST" name="queuePage" finished-at="2024-11-16T18:21:52 CST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:52 CST" name="stackPageT2" finished-at="2024-11-16T18:21:53 CST" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:53 CST" name="backtoQueue" finished-at="2024-11-16T18:21:53 CST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:53 CST" name="queuePage" finished-at="2024-11-16T18:21:54 CST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:54 CST" name="stackPageT3" finished-at="2024-11-16T18:21:54 CST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:54 CST" name="backtoQueue" finished-at="2024-11-16T18:21:55 CST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:55 CST" name="queuePage" finished-at="2024-11-16T18:21:55 CST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:55 CST" name="stackPageT4" finished-at="2024-11-16T18:21:56 CST" duration-ms="683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:56 CST" name="backtoQueue" finished-at="2024-11-16T18:21:56 CST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:56 CST" name="queuePage" finished-at="2024-11-16T18:21:57 CST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:57 CST" name="treePage" finished-at="2024-11-16T18:21:57 CST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:57 CST" name="backtoQueue" finished-at="2024-11-16T18:21:58 CST" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:58 CST" name="queuePage" finished-at="2024-11-16T18:21:58 CST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:58 CST" name="treePageT1" finished-at="2024-11-16T18:21:59 CST" duration-ms="786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:59 CST" name="backtoQueue" finished-at="2024-11-16T18:21:59 CST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:21:59 CST" name="queuePage" finished-at="2024-11-16T18:22:00 CST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:00 CST" name="treePageT2" finished-at="2024-11-16T18:22:00 CST" duration-ms="675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:00 CST" name="backtoQueue" finished-at="2024-11-16T18:22:00 CST" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:00 CST" name="queuePage" finished-at="2024-11-16T18:22:01 CST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:01 CST" name="treePageT3" finished-at="2024-11-16T18:22:02 CST" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:02 CST" name="backtoQueue" finished-at="2024-11-16T18:22:02 CST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:02 CST" name="queuePage" finished-at="2024-11-16T18:22:02 CST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:02 CST" name="treePageT4" finished-at="2024-11-16T18:22:03 CST" duration-ms="744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:03 CST" name="backtoQueue" finished-at="2024-11-16T18:22:03 CST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:03 CST" name="queuePage" finished-at="2024-11-16T18:22:04 CST" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic1()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:04 CST" name="tryHereTopic1" finished-at="2024-11-16T18:22:04 CST" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:04 CST" name="backtoQueue" finished-at="2024-11-16T18:22:05 CST" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:05 CST" name="queuePage" finished-at="2024-11-16T18:22:05 CST" duration-ms="362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic2()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:05 CST" name="tryHereTopic2" finished-at="2024-11-16T18:22:06 CST" duration-ms="873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:06 CST" name="backtoQueue" finished-at="2024-11-16T18:22:06 CST" duration-ms="471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:06 CST" name="queuePage" finished-at="2024-11-16T18:22:07 CST" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic3()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:07 CST" name="tryHereTopic3" finished-at="2024-11-16T18:22:07 CST" duration-ms="663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:07 CST" name="backtoQueue" finished-at="2024-11-16T18:22:08 CST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:08 CST" name="queuePage" finished-at="2024-11-16T18:22:08 CST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic4()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:08 CST" name="tryHereTopic4" finished-at="2024-11-16T18:22:09 CST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:09 CST" name="backtoQueue" finished-at="2024-11-16T18:22:09 CST" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:09 CST" name="queuePage" finished-at="2024-11-16T18:22:10 CST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT1(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:10 CST" name="validCodeT1" data-provider="codeDp" finished-at="2024-11-16T18:22:16 CST" duration-ms="6169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:16 CST" name="backtoQueue" finished-at="2024-11-16T18:22:16 CST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:16 CST" name="queuePage" finished-at="2024-11-16T18:22:17 CST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT2(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:17 CST" name="validCodeT2" data-provider="codeDp" finished-at="2024-11-16T18:22:23 CST" duration-ms="6048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:23 CST" name="backtoQueue" finished-at="2024-11-16T18:22:23 CST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:23 CST" name="queuePage" finished-at="2024-11-16T18:22:23 CST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT3(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:23 CST" name="validCodeT3" data-provider="codeDp" finished-at="2024-11-16T18:22:29 CST" duration-ms="6008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:29 CST" name="backtoQueue" finished-at="2024-11-16T18:22:30 CST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:30 CST" name="queuePage" finished-at="2024-11-16T18:22:30 CST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT4(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:30 CST" name="validCodeT4" data-provider="codeDp" finished-at="2024-11-16T18:22:37 CST" duration-ms="6440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:37 CST" name="backtoQueue" finished-at="2024-11-16T18:22:37 CST" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.QueuePageEvents@3bd7f8dc]" started-at="2024-11-16T18:22:37 CST" name="Logout" finished-at="2024-11-16T18:22:37 CST" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.QueuePageEvents -->
    </test> <!-- Test Parallel Queue module.Browser:chrome -->
    <test started-at="2024-11-16T18:21:31 CST" name="Test Parallel Graph module.Browser:Chrome" finished-at="2024-11-16T18:22:39 CST" duration-ms="67722">
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@44a2b17b]" started-at="2024-11-16T18:21:31 CST" name="setUP" finished-at="2024-11-16T18:21:33 CST" duration-ms="1752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@44a2b17b]" started-at="2024-11-16T18:22:39 CST" name="tearDown" finished-at="2024-11-16T18:22:39 CST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
      <class name="pageTestEvents.GraphPageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:33 CST" name="Login" finished-at="2024-11-16T18:21:35 CST" duration-ms="2274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:35 CST" name="graphPage" finished-at="2024-11-16T18:21:35 CST" duration-ms="452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="arrayPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:35 CST" name="arrayPage" finished-at="2024-11-16T18:21:36 CST" duration-ms="493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:36 CST" name="backtograph" finished-at="2024-11-16T18:21:36 CST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:36 CST" name="graphPage" finished-at="2024-11-16T18:21:37 CST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="arrayPageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:37 CST" name="arrayPageT1" finished-at="2024-11-16T18:21:37 CST" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:37 CST" name="backtograph" finished-at="2024-11-16T18:21:38 CST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:38 CST" name="graphPage" finished-at="2024-11-16T18:21:38 CST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="arrayPageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:38 CST" name="arrayPageT2" finished-at="2024-11-16T18:21:39 CST" duration-ms="738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:39 CST" name="backtograph" finished-at="2024-11-16T18:21:39 CST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:39 CST" name="graphPage" finished-at="2024-11-16T18:21:39 CST" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphDdropDown()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:39 CST" name="graphDdropDown" finished-at="2024-11-16T18:21:40 CST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphDdropDown -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:40 CST" name="backtograph" finished-at="2024-11-16T18:21:40 CST" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:40 CST" name="graphPage" finished-at="2024-11-16T18:21:40 CST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphDdropDownT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:40 CST" name="graphDdropDownT1" finished-at="2024-11-16T18:21:41 CST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphDdropDownT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:41 CST" name="backtograph" finished-at="2024-11-16T18:21:41 CST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:41 CST" name="graphPage" finished-at="2024-11-16T18:21:42 CST" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphDdropDownT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:42 CST" name="graphDdropDownT2" finished-at="2024-11-16T18:21:42 CST" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphDdropDownT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:42 CST" name="backtograph" finished-at="2024-11-16T18:21:43 CST" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:43 CST" name="graphPage" finished-at="2024-11-16T18:21:43 CST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="invalidCodeGraph(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:43 CST" name="invalidCodeGraph" data-provider="codeDp" finished-at="2024-11-16T18:21:50 CST" duration-ms="6618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:50 CST" name="backtograph" finished-at="2024-11-16T18:21:50 CST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:50 CST" name="graphPage" finished-at="2024-11-16T18:21:50 CST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="invalidCodeGraphRep(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:50 CST" name="invalidCodeGraphRep" data-provider="codeDp" finished-at="2024-11-16T18:21:56 CST" duration-ms="6062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeGraphRep -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:56 CST" name="backtograph" finished-at="2024-11-16T18:21:57 CST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:57 CST" name="graphPage" finished-at="2024-11-16T18:21:57 CST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="linkedListPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:57 CST" name="linkedListPage" finished-at="2024-11-16T18:21:58 CST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:58 CST" name="backtograph" finished-at="2024-11-16T18:21:58 CST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:58 CST" name="graphPage" finished-at="2024-11-16T18:21:58 CST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="linkedListPageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:58 CST" name="linkedListPageT1" finished-at="2024-11-16T18:21:59 CST" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:21:59 CST" name="backtograph" finished-at="2024-11-16T18:22:00 CST" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:00 CST" name="graphPage" finished-at="2024-11-16T18:22:00 CST" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="linkedListPageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:00 CST" name="linkedListPageT2" finished-at="2024-11-16T18:22:01 CST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:01 CST" name="backtograph" finished-at="2024-11-16T18:22:01 CST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:01 CST" name="graphPage" finished-at="2024-11-16T18:22:01 CST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="nocodeGraph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:01 CST" name="nocodeGraph" finished-at="2024-11-16T18:22:02 CST" duration-ms="763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:02 CST" name="backtograph" finished-at="2024-11-16T18:22:02 CST" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:02 CST" name="graphPage" finished-at="2024-11-16T18:22:03 CST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="nocodeGraphRepresentation()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:03 CST" name="nocodeGraphRepresentation" finished-at="2024-11-16T18:22:04 CST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeGraphRepresentation -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:04 CST" name="backtograph" finished-at="2024-11-16T18:22:04 CST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:04 CST" name="graphPage" finished-at="2024-11-16T18:22:04 CST" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="practiceQueT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:04 CST" name="practiceQueT1" finished-at="2024-11-16T18:22:05 CST" duration-ms="605" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at pageTestEvents.GraphPageEvents.practiceQueT1(GraphPageEvents.java:165)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQueT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:05 CST" name="backtograph" finished-at="2024-11-16T18:22:05 CST" duration-ms="368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:05 CST" name="graphPage" finished-at="2024-11-16T18:22:06 CST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="practiceQueT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:06 CST" name="practiceQueT2" finished-at="2024-11-16T18:22:06 CST" duration-ms="581" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at pageTestEvents.GraphPageEvents.practiceQueT2(GraphPageEvents.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQueT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:06 CST" name="backtograph" finished-at="2024-11-16T18:22:07 CST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:07 CST" name="graphPage" finished-at="2024-11-16T18:22:07 CST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="queuePage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:07 CST" name="queuePage" finished-at="2024-11-16T18:22:08 CST" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:08 CST" name="backtograph" finished-at="2024-11-16T18:22:08 CST" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:08 CST" name="graphPage" finished-at="2024-11-16T18:22:08 CST" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="queuePageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:08 CST" name="queuePageT1" finished-at="2024-11-16T18:22:09 CST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:09 CST" name="backtograph" finished-at="2024-11-16T18:22:09 CST" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:09 CST" name="graphPage" finished-at="2024-11-16T18:22:10 CST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="queuePageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:10 CST" name="queuePageT2" finished-at="2024-11-16T18:22:10 CST" duration-ms="666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:10 CST" name="backtograph" finished-at="2024-11-16T18:22:11 CST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:11 CST" name="graphPage" finished-at="2024-11-16T18:22:11 CST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="stackPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:11 CST" name="stackPage" finished-at="2024-11-16T18:22:11 CST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:11 CST" name="backtograph" finished-at="2024-11-16T18:22:12 CST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:12 CST" name="graphPage" finished-at="2024-11-16T18:22:12 CST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="stackPageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:12 CST" name="stackPageT1" finished-at="2024-11-16T18:22:13 CST" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:13 CST" name="backtograph" finished-at="2024-11-16T18:22:13 CST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:13 CST" name="graphPage" finished-at="2024-11-16T18:22:14 CST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="stackPageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:14 CST" name="stackPageT2" finished-at="2024-11-16T18:22:14 CST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:14 CST" name="backtograph" finished-at="2024-11-16T18:22:15 CST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:15 CST" name="graphPage" finished-at="2024-11-16T18:22:15 CST" duration-ms="444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="treePage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:15 CST" name="treePage" finished-at="2024-11-16T18:22:16 CST" duration-ms="589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:16 CST" name="backtograph" finished-at="2024-11-16T18:22:16 CST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:16 CST" name="graphPage" finished-at="2024-11-16T18:22:17 CST" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="treePageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:17 CST" name="treePageT1" finished-at="2024-11-16T18:22:17 CST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:17 CST" name="backtograph" finished-at="2024-11-16T18:22:18 CST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:18 CST" name="graphPage" finished-at="2024-11-16T18:22:18 CST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="treePageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:18 CST" name="treePageT2" finished-at="2024-11-16T18:22:19 CST" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:19 CST" name="backtograph" finished-at="2024-11-16T18:22:19 CST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:19 CST" name="graphPage" finished-at="2024-11-16T18:22:20 CST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="tryHereGraph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:20 CST" name="tryHereGraph" finished-at="2024-11-16T18:22:20 CST" duration-ms="770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:20 CST" name="backtograph" finished-at="2024-11-16T18:22:21 CST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:21 CST" name="graphPage" finished-at="2024-11-16T18:22:21 CST" duration-ms="415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="tryHereGraphRepresentation()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:21 CST" name="tryHereGraphRepresentation" finished-at="2024-11-16T18:22:22 CST" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereGraphRepresentation -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:22 CST" name="backtograph" finished-at="2024-11-16T18:22:22 CST" duration-ms="483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:22 CST" name="graphPage" finished-at="2024-11-16T18:22:23 CST" duration-ms="388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="validCodeGraph(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:23 CST" name="validCodeGraph" data-provider="codeDp" finished-at="2024-11-16T18:22:29 CST" duration-ms="5963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:29 CST" name="backtograph" finished-at="2024-11-16T18:22:29 CST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:29 CST" name="graphPage" finished-at="2024-11-16T18:22:30 CST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="validCodeGraphRep(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:30 CST" name="validCodeGraphRep" data-provider="codeDp" finished-at="2024-11-16T18:22:36 CST" duration-ms="5998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print"Hello";]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeGraphRep -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:36 CST" name="backtograph" finished-at="2024-11-16T18:22:36 CST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:36 CST" name="graphPage" finished-at="2024-11-16T18:22:36 CST" duration-ms="479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphTopic()[pri:1, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:36 CST" name="graphTopic" finished-at="2024-11-16T18:22:37 CST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphTopic -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:37 CST" name="backtograph" finished-at="2024-11-16T18:22:37 CST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:37 CST" name="graphPage" finished-at="2024-11-16T18:22:37 CST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphRepresentationTopic()[pri:2, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:37 CST" name="graphRepresentationTopic" finished-at="2024-11-16T18:22:38 CST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphRepresentationTopic -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:38 CST" name="backtograph" finished-at="2024-11-16T18:22:38 CST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.GraphPageEvents@7a56812e]" started-at="2024-11-16T18:22:38 CST" name="Logout" finished-at="2024-11-16T18:22:39 CST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.GraphPageEvents -->
    </test> <!-- Test Parallel Graph module.Browser:Chrome -->
    <test started-at="2024-11-16T18:20:11 CST" name="Test Parallel LinkedList module.Browser:chrome" finished-at="2024-11-16T18:23:09 CST" duration-ms="177757">
      <class name="pageTestEvents.LinkedListPageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:14 CST" name="Login" finished-at="2024-11-16T18:20:38 CST" duration-ms="23993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:38 CST" name="linkedListPage" finished-at="2024-11-16T18:20:39 CST" duration-ms="1099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:39 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:41 CST" duration-ms="1281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:41 CST" name="backtoQueue" finished-at="2024-11-16T18:20:41 CST" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:41 CST" name="linkedListPage" finished-at="2024-11-16T18:20:42 CST" duration-ms="444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:42 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:43 CST" duration-ms="1282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:43 CST" name="backtoQueue" finished-at="2024-11-16T18:20:44 CST" duration-ms="603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:44 CST" name="linkedListPage" finished-at="2024-11-16T18:20:44 CST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:44 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:46 CST" duration-ms="1252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:46 CST" name="backtoQueue" finished-at="2024-11-16T18:20:46 CST" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:46 CST" name="linkedListPage" finished-at="2024-11-16T18:20:47 CST" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:47 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:48 CST" duration-ms="909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:48 CST" name="backtoQueue" finished-at="2024-11-16T18:20:48 CST" duration-ms="488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:48 CST" name="linkedListPage" finished-at="2024-11-16T18:20:49 CST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:49 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:50 CST" duration-ms="880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:50 CST" name="backtoQueue" finished-at="2024-11-16T18:20:50 CST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:50 CST" name="linkedListPage" finished-at="2024-11-16T18:20:51 CST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:51 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:52 CST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:52 CST" name="backtoQueue" finished-at="2024-11-16T18:20:52 CST" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:52 CST" name="linkedListPage" finished-at="2024-11-16T18:20:53 CST" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:53 CST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:54 CST" duration-ms="1219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:54 CST" name="backtoQueue" finished-at="2024-11-16T18:20:54 CST" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:54 CST" name="linkedListPage" finished-at="2024-11-16T18:20:55 CST" duration-ms="607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:55 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:56 CST" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:56 CST" name="backtoQueue" finished-at="2024-11-16T18:20:57 CST" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:57 CST" name="linkedListPage" finished-at="2024-11-16T18:20:58 CST" duration-ms="885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:58 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:20:59 CST" duration-ms="1089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:59 CST" name="backtoQueue" finished-at="2024-11-16T18:20:59 CST" duration-ms="518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:20:59 CST" name="linkedListPage" finished-at="2024-11-16T18:21:00 CST" duration-ms="552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:00 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:01 CST" duration-ms="1027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:01 CST" name="backtoQueue" finished-at="2024-11-16T18:21:02 CST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:02 CST" name="linkedListPage" finished-at="2024-11-16T18:21:02 CST" duration-ms="675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:02 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:04 CST" duration-ms="1198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:04 CST" name="backtoQueue" finished-at="2024-11-16T18:21:04 CST" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:04 CST" name="linkedListPage" finished-at="2024-11-16T18:21:05 CST" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:05 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:06 CST" duration-ms="1069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:06 CST" name="backtoQueue" finished-at="2024-11-16T18:21:06 CST" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:06 CST" name="linkedListPage" finished-at="2024-11-16T18:21:07 CST" duration-ms="528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:07 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:08 CST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:08 CST" name="backtoQueue" finished-at="2024-11-16T18:21:09 CST" duration-ms="660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:09 CST" name="linkedListPage" finished-at="2024-11-16T18:21:09 CST" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:09 CST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:10 CST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:10 CST" name="backtoQueue" finished-at="2024-11-16T18:21:11 CST" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:11 CST" name="linkedListPage" finished-at="2024-11-16T18:21:11 CST" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:11 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:14 CST" duration-ms="2231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:14 CST" name="backtoQueue" finished-at="2024-11-16T18:21:14 CST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:14 CST" name="linkedListPage" finished-at="2024-11-16T18:21:15 CST" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:15 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:18 CST" duration-ms="3001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:18 CST" name="backtoQueue" finished-at="2024-11-16T18:21:19 CST" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:19 CST" name="linkedListPage" finished-at="2024-11-16T18:21:19 CST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:19 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:21 CST" duration-ms="1365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:21 CST" name="backtoQueue" finished-at="2024-11-16T18:21:22 CST" duration-ms="937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:22 CST" name="linkedListPage" finished-at="2024-11-16T18:21:22 CST" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:22 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:24 CST" duration-ms="1465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:24 CST" name="backtoQueue" finished-at="2024-11-16T18:21:24 CST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:24 CST" name="linkedListPage" finished-at="2024-11-16T18:21:25 CST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:25 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:26 CST" duration-ms="1231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:26 CST" name="backtoQueue" finished-at="2024-11-16T18:21:27 CST" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:27 CST" name="linkedListPage" finished-at="2024-11-16T18:21:27 CST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:27 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:34 CST" duration-ms="6323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:34 CST" name="backtoQueue" finished-at="2024-11-16T18:21:34 CST" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:34 CST" name="linkedListPage" finished-at="2024-11-16T18:21:35 CST" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:35 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:41 CST" duration-ms="6073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:41 CST" name="backtoQueue" finished-at="2024-11-16T18:21:41 CST" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:41 CST" name="linkedListPage" finished-at="2024-11-16T18:21:41 CST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:41 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:42 CST" duration-ms="609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:42 CST" name="backtoQueue" finished-at="2024-11-16T18:21:42 CST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:42 CST" name="linkedListPage" finished-at="2024-11-16T18:21:43 CST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:43 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:43 CST" duration-ms="629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:43 CST" name="backtoQueue" finished-at="2024-11-16T18:21:44 CST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:44 CST" name="linkedListPage" finished-at="2024-11-16T18:21:44 CST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:44 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:45 CST" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:45 CST" name="backtoQueue" finished-at="2024-11-16T18:21:45 CST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:45 CST" name="linkedListPage" finished-at="2024-11-16T18:21:45 CST" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:45 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:46 CST" duration-ms="561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:46 CST" name="backtoQueue" finished-at="2024-11-16T18:21:46 CST" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:46 CST" name="linkedListPage" finished-at="2024-11-16T18:21:47 CST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:47 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:47 CST" duration-ms="589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:47 CST" name="backtoQueue" finished-at="2024-11-16T18:21:48 CST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:48 CST" name="linkedListPage" finished-at="2024-11-16T18:21:48 CST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:48 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:49 CST" duration-ms="644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:49 CST" name="backtoQueue" finished-at="2024-11-16T18:21:49 CST" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:49 CST" name="linkedListPage" finished-at="2024-11-16T18:21:49 CST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:49 CST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:50 CST" duration-ms="576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:50 CST" name="backtoQueue" finished-at="2024-11-16T18:21:50 CST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:50 CST" name="linkedListPage" finished-at="2024-11-16T18:21:50 CST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:50 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:51 CST" duration-ms="800" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:51 CST" name="backtoQueue" finished-at="2024-11-16T18:21:52 CST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:52 CST" name="linkedListPage" finished-at="2024-11-16T18:21:52 CST" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:52 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:53 CST" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:53 CST" name="backtoQueue" finished-at="2024-11-16T18:21:53 CST" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:53 CST" name="linkedListPage" finished-at="2024-11-16T18:21:53 CST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:53 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:55 CST" duration-ms="1057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:55 CST" name="backtoQueue" finished-at="2024-11-16T18:21:55 CST" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:55 CST" name="linkedListPage" finished-at="2024-11-16T18:21:56 CST" duration-ms="733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:56 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:57 CST" duration-ms="1164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:57 CST" name="backtoQueue" finished-at="2024-11-16T18:21:58 CST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:58 CST" name="linkedListPage" finished-at="2024-11-16T18:21:58 CST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:58 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:21:59 CST" duration-ms="869" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:59 CST" name="backtoQueue" finished-at="2024-11-16T18:21:59 CST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:21:59 CST" name="linkedListPage" finished-at="2024-11-16T18:22:00 CST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:00 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:00 CST" duration-ms="751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:00 CST" name="backtoQueue" finished-at="2024-11-16T18:22:01 CST" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:01 CST" name="linkedListPage" finished-at="2024-11-16T18:22:01 CST" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:01 CST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:02 CST" duration-ms="775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:02 CST" name="backtoQueue" finished-at="2024-11-16T18:22:02 CST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:02 CST" name="linkedListPage" finished-at="2024-11-16T18:22:03 CST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:03 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:03 CST" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:03 CST" name="backtoQueue" finished-at="2024-11-16T18:22:04 CST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:04 CST" name="linkedListPage" finished-at="2024-11-16T18:22:04 CST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:04 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:05 CST" duration-ms="744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:05 CST" name="backtoQueue" finished-at="2024-11-16T18:22:05 CST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:05 CST" name="linkedListPage" finished-at="2024-11-16T18:22:06 CST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:06 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:06 CST" duration-ms="652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:06 CST" name="backtoQueue" finished-at="2024-11-16T18:22:07 CST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:07 CST" name="linkedListPage" finished-at="2024-11-16T18:22:07 CST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:07 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:08 CST" duration-ms="608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:08 CST" name="backtoQueue" finished-at="2024-11-16T18:22:08 CST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:08 CST" name="linkedListPage" finished-at="2024-11-16T18:22:08 CST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:08 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:09 CST" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:09 CST" name="backtoQueue" finished-at="2024-11-16T18:22:09 CST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:09 CST" name="linkedListPage" finished-at="2024-11-16T18:22:10 CST" duration-ms="333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:10 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:10 CST" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:10 CST" name="backtoQueue" finished-at="2024-11-16T18:22:11 CST" duration-ms="335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:11 CST" name="linkedListPage" finished-at="2024-11-16T18:22:11 CST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:11 CST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:12 CST" duration-ms="638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:12 CST" name="backtoQueue" finished-at="2024-11-16T18:22:12 CST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:12 CST" name="linkedListPage" finished-at="2024-11-16T18:22:12 CST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:12 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:13 CST" duration-ms="705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:13 CST" name="backtoQueue" finished-at="2024-11-16T18:22:13 CST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:13 CST" name="linkedListPage" finished-at="2024-11-16T18:22:14 CST" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:14 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:15 CST" duration-ms="781" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:15 CST" name="backtoQueue" finished-at="2024-11-16T18:22:15 CST" duration-ms="417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:15 CST" name="linkedListPage" finished-at="2024-11-16T18:22:15 CST" duration-ms="394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:15 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:16 CST" duration-ms="677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:16 CST" name="backtoQueue" finished-at="2024-11-16T18:22:16 CST" duration-ms="366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:16 CST" name="linkedListPage" finished-at="2024-11-16T18:22:17 CST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:17 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:18 CST" duration-ms="715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:18 CST" name="backtoQueue" finished-at="2024-11-16T18:22:18 CST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:18 CST" name="linkedListPage" finished-at="2024-11-16T18:22:18 CST" duration-ms="420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:18 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:19 CST" duration-ms="683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:19 CST" name="backtoQueue" finished-at="2024-11-16T18:22:19 CST" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:19 CST" name="linkedListPage" finished-at="2024-11-16T18:22:20 CST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:20 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:20 CST" duration-ms="664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:20 CST" name="backtoQueue" finished-at="2024-11-16T18:22:21 CST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:21 CST" name="linkedListPage" finished-at="2024-11-16T18:22:21 CST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:21 CST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:22 CST" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:22 CST" name="backtoQueue" finished-at="2024-11-16T18:22:22 CST" duration-ms="480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:22 CST" name="linkedListPage" finished-at="2024-11-16T18:22:23 CST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:23 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:23 CST" duration-ms="235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:23 CST" name="backtoQueue" finished-at="2024-11-16T18:22:23 CST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:23 CST" name="linkedListPage" finished-at="2024-11-16T18:22:24 CST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:24 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:24 CST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:24 CST" name="backtoQueue" finished-at="2024-11-16T18:22:24 CST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:24 CST" name="linkedListPage" finished-at="2024-11-16T18:22:25 CST" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:25 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:25 CST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:25 CST" name="backtoQueue" finished-at="2024-11-16T18:22:26 CST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:26 CST" name="linkedListPage" finished-at="2024-11-16T18:22:26 CST" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:26 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:27 CST" duration-ms="784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:27 CST" name="backtoQueue" finished-at="2024-11-16T18:22:28 CST" duration-ms="556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:28 CST" name="linkedListPage" finished-at="2024-11-16T18:22:28 CST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:28 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:29 CST" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:29 CST" name="backtoQueue" finished-at="2024-11-16T18:22:29 CST" duration-ms="541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:29 CST" name="linkedListPage" finished-at="2024-11-16T18:22:30 CST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:30 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:30 CST" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:30 CST" name="backtoQueue" finished-at="2024-11-16T18:22:31 CST" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:31 CST" name="linkedListPage" finished-at="2024-11-16T18:22:31 CST" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:31 CST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:31 CST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:31 CST" name="backtoQueue" finished-at="2024-11-16T18:22:32 CST" duration-ms="447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:32 CST" name="linkedListPage" finished-at="2024-11-16T18:22:32 CST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:32 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:33 CST" duration-ms="853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:33 CST" name="backtoQueue" finished-at="2024-11-16T18:22:34 CST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:34 CST" name="linkedListPage" finished-at="2024-11-16T18:22:34 CST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:34 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:35 CST" duration-ms="840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:35 CST" name="backtoQueue" finished-at="2024-11-16T18:22:35 CST" duration-ms="401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:35 CST" name="linkedListPage" finished-at="2024-11-16T18:22:36 CST" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:36 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:37 CST" duration-ms="771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:37 CST" name="backtoQueue" finished-at="2024-11-16T18:22:37 CST" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:37 CST" name="linkedListPage" finished-at="2024-11-16T18:22:38 CST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:38 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:39 CST" duration-ms="932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:39 CST" name="backtoQueue" finished-at="2024-11-16T18:22:39 CST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:39 CST" name="linkedListPage" finished-at="2024-11-16T18:22:39 CST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:39 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:40 CST" duration-ms="805" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:40 CST" name="backtoQueue" finished-at="2024-11-16T18:22:41 CST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:41 CST" name="linkedListPage" finished-at="2024-11-16T18:22:41 CST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:41 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:42 CST" duration-ms="722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:42 CST" name="backtoQueue" finished-at="2024-11-16T18:22:42 CST" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:42 CST" name="linkedListPage" finished-at="2024-11-16T18:22:43 CST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:43 CST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:43 CST" duration-ms="764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:43 CST" name="backtoQueue" finished-at="2024-11-16T18:22:44 CST" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:44 CST" name="linkedListPage" finished-at="2024-11-16T18:22:45 CST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:45 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:46 CST" duration-ms="1088" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:46 CST" name="backtoQueue" finished-at="2024-11-16T18:22:46 CST" duration-ms="567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:46 CST" name="linkedListPage" finished-at="2024-11-16T18:22:47 CST" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:47 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:47 CST" duration-ms="626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:47 CST" name="backtoQueue" finished-at="2024-11-16T18:22:48 CST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:48 CST" name="linkedListPage" finished-at="2024-11-16T18:22:48 CST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:48 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:49 CST" duration-ms="723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:49 CST" name="backtoQueue" finished-at="2024-11-16T18:22:49 CST" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:49 CST" name="linkedListPage" finished-at="2024-11-16T18:22:50 CST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:50 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:50 CST" duration-ms="749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:50 CST" name="backtoQueue" finished-at="2024-11-16T18:22:51 CST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:51 CST" name="linkedListPage" finished-at="2024-11-16T18:22:51 CST" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:51 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:52 CST" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:52 CST" name="backtoQueue" finished-at="2024-11-16T18:22:52 CST" duration-ms="556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:52 CST" name="linkedListPage" finished-at="2024-11-16T18:22:53 CST" duration-ms="589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:53 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:54 CST" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:54 CST" name="backtoQueue" finished-at="2024-11-16T18:22:55 CST" duration-ms="595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:55 CST" name="linkedListPage" finished-at="2024-11-16T18:22:55 CST" duration-ms="436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:55 CST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-16T18:22:56 CST" duration-ms="663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:56 CST" name="backtoQueue" finished-at="2024-11-16T18:22:56 CST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:56 CST" name="linkedListPage" finished-at="2024-11-16T18:22:56 CST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:56 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:22:57 CST" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:57 CST" name="backtoQueue" finished-at="2024-11-16T18:22:58 CST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:58 CST" name="linkedListPage" finished-at="2024-11-16T18:22:58 CST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:58 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:22:59 CST" duration-ms="954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:59 CST" name="backtoQueue" finished-at="2024-11-16T18:22:59 CST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:22:59 CST" name="linkedListPage" finished-at="2024-11-16T18:23:00 CST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:00 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:01 CST" duration-ms="1026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:01 CST" name="backtoQueue" finished-at="2024-11-16T18:23:01 CST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:01 CST" name="linkedListPage" finished-at="2024-11-16T18:23:01 CST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:01 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:02 CST" duration-ms="1015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:02 CST" name="backtoQueue" finished-at="2024-11-16T18:23:03 CST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:03 CST" name="linkedListPage" finished-at="2024-11-16T18:23:03 CST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:03 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:04 CST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:04 CST" name="backtoQueue" finished-at="2024-11-16T18:23:05 CST" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:05 CST" name="linkedListPage" finished-at="2024-11-16T18:23:05 CST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:05 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:06 CST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:06 CST" name="backtoQueue" finished-at="2024-11-16T18:23:06 CST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:06 CST" name="linkedListPage" finished-at="2024-11-16T18:23:07 CST" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:07 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:08 CST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:08 CST" name="backtoQueue" finished-at="2024-11-16T18:23:08 CST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.LinkedListPageEvents@1601e47]" started-at="2024-11-16T18:23:08 CST" name="Logout" finished-at="2024-11-16T18:23:08 CST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.LinkedListPageEvents -->
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@5471388b]" started-at="2024-11-16T18:20:11 CST" name="setUP" finished-at="2024-11-16T18:20:14 CST" duration-ms="2959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@5471388b]" started-at="2024-11-16T18:23:08 CST" name="tearDown" finished-at="2024-11-16T18:23:09 CST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
    </test> <!-- Test Parallel LinkedList module.Browser:chrome -->
    <test started-at="2024-11-16T18:21:12 CST" name="Test Parallel Tree module.Browser:Edge" finished-at="2024-11-16T18:23:50 CST" duration-ms="158000">
      <class name="pageTestEvents.TreePageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:18 CST" name="Login" finished-at="2024-11-16T18:21:20 CST" duration-ms="1782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:20 CST" name="treePage" finished-at="2024-11-16T18:21:21 CST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:21 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:23 CST" duration-ms="2355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:23 CST" name="backtostack" finished-at="2024-11-16T18:21:24 CST" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:24 CST" name="treePage" finished-at="2024-11-16T18:21:24 CST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:24 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:30 CST" duration-ms="6104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:30 CST" name="backtostack" finished-at="2024-11-16T18:21:31 CST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:31 CST" name="treePage" finished-at="2024-11-16T18:21:31 CST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:31 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:37 CST" duration-ms="6023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:37 CST" name="backtostack" finished-at="2024-11-16T18:21:37 CST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:37 CST" name="treePage" finished-at="2024-11-16T18:21:38 CST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:38 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:44 CST" duration-ms="6145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:44 CST" name="backtostack" finished-at="2024-11-16T18:21:44 CST" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:44 CST" name="treePage" finished-at="2024-11-16T18:21:44 CST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:44 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:50 CST" duration-ms="6007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:50 CST" name="backtostack" finished-at="2024-11-16T18:21:51 CST" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:51 CST" name="treePage" finished-at="2024-11-16T18:21:51 CST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:51 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:21:57 CST" duration-ms="6025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:57 CST" name="backtostack" finished-at="2024-11-16T18:21:58 CST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:58 CST" name="treePage" finished-at="2024-11-16T18:21:58 CST" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:21:58 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:04 CST" duration-ms="6200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:04 CST" name="backtostack" finished-at="2024-11-16T18:22:05 CST" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:05 CST" name="treePage" finished-at="2024-11-16T18:22:05 CST" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:05 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:11 CST" duration-ms="6038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:11 CST" name="backtostack" finished-at="2024-11-16T18:22:11 CST" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:11 CST" name="treePage" finished-at="2024-11-16T18:22:12 CST" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:12 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:18 CST" duration-ms="6539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:18 CST" name="backtostack" finished-at="2024-11-16T18:22:19 CST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:19 CST" name="treePage" finished-at="2024-11-16T18:22:19 CST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:19 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:25 CST" duration-ms="6137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:25 CST" name="backtostack" finished-at="2024-11-16T18:22:26 CST" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:26 CST" name="treePage" finished-at="2024-11-16T18:22:26 CST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:26 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:32 CST" duration-ms="6047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:32 CST" name="backtostack" finished-at="2024-11-16T18:22:32 CST" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:32 CST" name="treePage" finished-at="2024-11-16T18:22:33 CST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:33 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:39 CST" duration-ms="6399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:39 CST" name="backtostack" finished-at="2024-11-16T18:22:40 CST" duration-ms="319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:40 CST" name="treePage" finished-at="2024-11-16T18:22:40 CST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:40 CST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-16T18:22:46 CST" duration-ms="6064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:46 CST" name="backtostack" finished-at="2024-11-16T18:22:46 CST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:46 CST" name="treePage" finished-at="2024-11-16T18:22:47 CST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:47 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:47 CST" duration-ms="714" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:47 CST" name="backtostack" finished-at="2024-11-16T18:22:48 CST" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:48 CST" name="treePage" finished-at="2024-11-16T18:22:48 CST" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:48 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:49 CST" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:49 CST" name="backtostack" finished-at="2024-11-16T18:22:49 CST" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:49 CST" name="treePage" finished-at="2024-11-16T18:22:50 CST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:50 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:50 CST" duration-ms="746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:50 CST" name="backtostack" finished-at="2024-11-16T18:22:51 CST" duration-ms="416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:51 CST" name="treePage" finished-at="2024-11-16T18:22:51 CST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:51 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:52 CST" duration-ms="739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:52 CST" name="backtostack" finished-at="2024-11-16T18:22:52 CST" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:52 CST" name="treePage" finished-at="2024-11-16T18:22:52 CST" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:52 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:53 CST" duration-ms="843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:53 CST" name="backtostack" finished-at="2024-11-16T18:22:54 CST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:54 CST" name="treePage" finished-at="2024-11-16T18:22:54 CST" duration-ms="370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:54 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:55 CST" duration-ms="903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:55 CST" name="backtostack" finished-at="2024-11-16T18:22:55 CST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:55 CST" name="treePage" finished-at="2024-11-16T18:22:56 CST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:56 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:56 CST" duration-ms="563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:56 CST" name="backtostack" finished-at="2024-11-16T18:22:57 CST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:57 CST" name="treePage" finished-at="2024-11-16T18:22:57 CST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:57 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:57 CST" duration-ms="646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:57 CST" name="backtostack" finished-at="2024-11-16T18:22:58 CST" duration-ms="290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:58 CST" name="treePage" finished-at="2024-11-16T18:22:58 CST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:58 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:22:59 CST" duration-ms="682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:59 CST" name="backtostack" finished-at="2024-11-16T18:22:59 CST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:59 CST" name="treePage" finished-at="2024-11-16T18:22:59 CST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:22:59 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:00 CST" duration-ms="633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:00 CST" name="backtostack" finished-at="2024-11-16T18:23:00 CST" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:00 CST" name="treePage" finished-at="2024-11-16T18:23:00 CST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:00 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:01 CST" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:01 CST" name="backtostack" finished-at="2024-11-16T18:23:01 CST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:01 CST" name="treePage" finished-at="2024-11-16T18:23:02 CST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:02 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:02 CST" duration-ms="697" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:02 CST" name="backtostack" finished-at="2024-11-16T18:23:03 CST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:03 CST" name="treePage" finished-at="2024-11-16T18:23:03 CST" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:03 CST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:04 CST" duration-ms="654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:04 CST" name="backtostack" finished-at="2024-11-16T18:23:04 CST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:04 CST" name="treePage" finished-at="2024-11-16T18:23:05 CST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:05 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:05 CST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:05 CST" name="backtostack" finished-at="2024-11-16T18:23:05 CST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:05 CST" name="treePage" finished-at="2024-11-16T18:23:05 CST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:05 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:06 CST" duration-ms="250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:06 CST" name="backtostack" finished-at="2024-11-16T18:23:06 CST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:06 CST" name="treePage" finished-at="2024-11-16T18:23:06 CST" duration-ms="299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:06 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:07 CST" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:07 CST" name="backtostack" finished-at="2024-11-16T18:23:07 CST" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:07 CST" name="treePage" finished-at="2024-11-16T18:23:07 CST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:07 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:07 CST" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:07 CST" name="backtostack" finished-at="2024-11-16T18:23:08 CST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:08 CST" name="treePage" finished-at="2024-11-16T18:23:08 CST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:08 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:08 CST" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:08 CST" name="backtostack" finished-at="2024-11-16T18:23:09 CST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:09 CST" name="treePage" finished-at="2024-11-16T18:23:09 CST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:09 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:09 CST" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:09 CST" name="backtostack" finished-at="2024-11-16T18:23:10 CST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:10 CST" name="treePage" finished-at="2024-11-16T18:23:10 CST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:10 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:10 CST" duration-ms="229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:10 CST" name="backtostack" finished-at="2024-11-16T18:23:10 CST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:10 CST" name="treePage" finished-at="2024-11-16T18:23:11 CST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:11 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:11 CST" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:11 CST" name="backtostack" finished-at="2024-11-16T18:23:11 CST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:11 CST" name="treePage" finished-at="2024-11-16T18:23:11 CST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:11 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:12 CST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:12 CST" name="backtostack" finished-at="2024-11-16T18:23:12 CST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:12 CST" name="treePage" finished-at="2024-11-16T18:23:12 CST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:12 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:12 CST" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:12 CST" name="backtostack" finished-at="2024-11-16T18:23:13 CST" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:13 CST" name="treePage" finished-at="2024-11-16T18:23:13 CST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:13 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:13 CST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:13 CST" name="backtostack" finished-at="2024-11-16T18:23:13 CST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:13 CST" name="treePage" finished-at="2024-11-16T18:23:13 CST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:13 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:14 CST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:14 CST" name="backtostack" finished-at="2024-11-16T18:23:14 CST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:14 CST" name="treePage" finished-at="2024-11-16T18:23:14 CST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:14 CST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-16T18:23:14 CST" duration-ms="229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:14 CST" name="backtostack" finished-at="2024-11-16T18:23:15 CST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:15 CST" name="treePage" finished-at="2024-11-16T18:23:15 CST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:15 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:16 CST" duration-ms="570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:16 CST" name="backtostack" finished-at="2024-11-16T18:23:16 CST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:16 CST" name="treePage" finished-at="2024-11-16T18:23:16 CST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:16 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:17 CST" duration-ms="525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:17 CST" name="backtostack" finished-at="2024-11-16T18:23:17 CST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:17 CST" name="treePage" finished-at="2024-11-16T18:23:17 CST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:17 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:18 CST" duration-ms="544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:18 CST" name="backtostack" finished-at="2024-11-16T18:23:18 CST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:18 CST" name="treePage" finished-at="2024-11-16T18:23:18 CST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:18 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:19 CST" duration-ms="534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:19 CST" name="backtostack" finished-at="2024-11-16T18:23:19 CST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:19 CST" name="treePage" finished-at="2024-11-16T18:23:19 CST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:19 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:20 CST" duration-ms="600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:20 CST" name="backtostack" finished-at="2024-11-16T18:23:20 CST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:20 CST" name="treePage" finished-at="2024-11-16T18:23:20 CST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:20 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:21 CST" duration-ms="556" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:21 CST" name="backtostack" finished-at="2024-11-16T18:23:21 CST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:21 CST" name="treePage" finished-at="2024-11-16T18:23:21 CST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:21 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:22 CST" duration-ms="542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:22 CST" name="backtostack" finished-at="2024-11-16T18:23:22 CST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:22 CST" name="treePage" finished-at="2024-11-16T18:23:23 CST" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:23 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:23 CST" duration-ms="565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:23 CST" name="backtostack" finished-at="2024-11-16T18:23:23 CST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:23 CST" name="treePage" finished-at="2024-11-16T18:23:24 CST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:24 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:24 CST" duration-ms="523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:24 CST" name="backtostack" finished-at="2024-11-16T18:23:25 CST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:25 CST" name="treePage" finished-at="2024-11-16T18:23:25 CST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:25 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:25 CST" duration-ms="571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:25 CST" name="backtostack" finished-at="2024-11-16T18:23:26 CST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:26 CST" name="treePage" finished-at="2024-11-16T18:23:26 CST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:26 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:26 CST" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:26 CST" name="backtostack" finished-at="2024-11-16T18:23:27 CST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:27 CST" name="treePage" finished-at="2024-11-16T18:23:27 CST" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:27 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:27 CST" duration-ms="595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:27 CST" name="backtostack" finished-at="2024-11-16T18:23:28 CST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:28 CST" name="treePage" finished-at="2024-11-16T18:23:28 CST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:28 CST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-16T18:23:29 CST" duration-ms="662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:29 CST" name="backtostack" finished-at="2024-11-16T18:23:29 CST" duration-ms="394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:29 CST" name="treePage" finished-at="2024-11-16T18:23:29 CST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:29 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:30 CST" duration-ms="916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:30 CST" name="backtostack" finished-at="2024-11-16T18:23:31 CST" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:31 CST" name="treePage" finished-at="2024-11-16T18:23:31 CST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:31 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:32 CST" duration-ms="850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:32 CST" name="backtostack" finished-at="2024-11-16T18:23:32 CST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:32 CST" name="treePage" finished-at="2024-11-16T18:23:32 CST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:32 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:33 CST" duration-ms="789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:33 CST" name="backtostack" finished-at="2024-11-16T18:23:34 CST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:34 CST" name="treePage" finished-at="2024-11-16T18:23:34 CST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:34 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:34 CST" duration-ms="744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:34 CST" name="backtostack" finished-at="2024-11-16T18:23:35 CST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:35 CST" name="treePage" finished-at="2024-11-16T18:23:35 CST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:35 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:36 CST" duration-ms="809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:36 CST" name="backtostack" finished-at="2024-11-16T18:23:36 CST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:36 CST" name="treePage" finished-at="2024-11-16T18:23:36 CST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:36 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:37 CST" duration-ms="768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:37 CST" name="backtostack" finished-at="2024-11-16T18:23:37 CST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:37 CST" name="treePage" finished-at="2024-11-16T18:23:38 CST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:38 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:39 CST" duration-ms="910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:39 CST" name="backtostack" finished-at="2024-11-16T18:23:39 CST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:39 CST" name="treePage" finished-at="2024-11-16T18:23:39 CST" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:39 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:40 CST" duration-ms="783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:40 CST" name="backtostack" finished-at="2024-11-16T18:23:40 CST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:40 CST" name="treePage" finished-at="2024-11-16T18:23:41 CST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:41 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:42 CST" duration-ms="874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:42 CST" name="backtostack" finished-at="2024-11-16T18:23:42 CST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:42 CST" name="treePage" finished-at="2024-11-16T18:23:42 CST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:42 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:43 CST" duration-ms="874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:43 CST" name="backtostack" finished-at="2024-11-16T18:23:43 CST" duration-ms="311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:43 CST" name="treePage" finished-at="2024-11-16T18:23:44 CST" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:44 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:45 CST" duration-ms="878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:45 CST" name="backtostack" finished-at="2024-11-16T18:23:45 CST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:45 CST" name="treePage" finished-at="2024-11-16T18:23:45 CST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:45 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:47 CST" duration-ms="1774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:47 CST" name="backtostack" finished-at="2024-11-16T18:23:47 CST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:47 CST" name="treePage" finished-at="2024-11-16T18:23:48 CST" duration-ms="269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:48 CST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-16T18:23:48 CST" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:48 CST" name="backtostack" finished-at="2024-11-16T18:23:49 CST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.TreePageEvents@1a69561c]" started-at="2024-11-16T18:23:49 CST" name="Logout" finished-at="2024-11-16T18:23:49 CST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.TreePageEvents -->
      <class name="base.BaseTest">
        <test-method is-config="true" signature="setUP(java.lang.String)[pri:0, instance:base.BaseTest@552518c3]" started-at="2024-11-16T18:21:12 CST" name="setUP" finished-at="2024-11-16T18:21:18 CST" duration-ms="5645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:base.BaseTest@552518c3]" started-at="2024-11-16T18:23:49 CST" name="tearDown" finished-at="2024-11-16T18:23:50 CST" duration-ms="1316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.BaseTest -->
    </test> <!-- Test Parallel Tree module.Browser:Edge -->
  </suite> <!-- Suite_Parallel -->
</testng-results>
