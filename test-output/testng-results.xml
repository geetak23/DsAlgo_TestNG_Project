<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="245" passed="242" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-11T22:09:30 EST" name="Suite" finished-at="2024-11-11T22:17:39 EST" duration-ms="489374">
    <groups>
    </groups>
    <test started-at="2024-11-11T22:09:30 EST" name="Test" finished-at="2024-11-11T22:17:39 EST" duration-ms="489374">
      <class name="pageTestEvents.SignOutPageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:14:59 EST" name="Login" finished-at="2024-11-11T22:15:01 EST" duration-ms="1625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOutArray()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:01 EST" name="signOutArray" finished-at="2024-11-11T22:15:03 EST" duration-ms="1772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutArray -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:03 EST" name="backtoHome" finished-at="2024-11-11T22:15:03 EST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:03 EST" name="Login" finished-at="2024-11-11T22:15:04 EST" duration-ms="1698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOutGraph()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:04 EST" name="signOutGraph" finished-at="2024-11-11T22:15:06 EST" duration-ms="1706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutGraph -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:06 EST" name="backtoHome" finished-at="2024-11-11T22:15:06 EST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:06 EST" name="Login" finished-at="2024-11-11T22:15:08 EST" duration-ms="1622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOutLinkedList()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:08 EST" name="signOutLinkedList" finished-at="2024-11-11T22:15:10 EST" duration-ms="1965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutLinkedList -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:10 EST" name="backtoHome" finished-at="2024-11-11T22:15:10 EST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:10 EST" name="Login" finished-at="2024-11-11T22:15:11 EST" duration-ms="1635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOutQueue()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:11 EST" name="signOutQueue" finished-at="2024-11-11T22:15:13 EST" duration-ms="1833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutQueue -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:13 EST" name="backtoHome" finished-at="2024-11-11T22:15:13 EST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:13 EST" name="Login" finished-at="2024-11-11T22:15:15 EST" duration-ms="1678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOutStack()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:15 EST" name="signOutStack" finished-at="2024-11-11T22:15:17 EST" duration-ms="1746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutStack -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:17 EST" name="backtoHome" finished-at="2024-11-11T22:15:17 EST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:17 EST" name="Login" finished-at="2024-11-11T22:15:18 EST" duration-ms="1633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOutTree()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:18 EST" name="signOutTree" finished-at="2024-11-11T22:15:20 EST" duration-ms="1840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOutTree -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:20 EST" name="backtoHome" finished-at="2024-11-11T22:15:20 EST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:20 EST" name="Login" finished-at="2024-11-11T22:15:22 EST" duration-ms="1979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="signOuthome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:22 EST" name="signOuthome" finished-at="2024-11-11T22:15:23 EST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signOuthome -->
        <test-method is-config="true" signature="backtoHome()[pri:0, instance:pageTestEvents.SignOutPageEvents@5a62b2a4]" started-at="2024-11-11T22:15:23 EST" name="backtoHome" finished-at="2024-11-11T22:15:23 EST" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoHome -->
      </class> <!-- pageTestEvents.SignOutPageEvents -->
      <class name="pageTestEvents.LinkedListPageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:10 EST" name="Login" finished-at="2024-11-11T22:10:11 EST" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:11 EST" name="linkedListPage" finished-at="2024-11-11T22:10:12 EST" duration-ms="692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:12 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:13 EST" duration-ms="1137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:13 EST" name="backtoQueue" finished-at="2024-11-11T22:10:14 EST" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:14 EST" name="linkedListPage" finished-at="2024-11-11T22:10:14 EST" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:14 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:15 EST" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:15 EST" name="backtoQueue" finished-at="2024-11-11T22:10:16 EST" duration-ms="571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:16 EST" name="linkedListPage" finished-at="2024-11-11T22:10:16 EST" duration-ms="559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:16 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:17 EST" duration-ms="1155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:17 EST" name="backtoQueue" finished-at="2024-11-11T22:10:18 EST" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:18 EST" name="linkedListPage" finished-at="2024-11-11T22:10:19 EST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:19 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:20 EST" duration-ms="1227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:20 EST" name="backtoQueue" finished-at="2024-11-11T22:10:21 EST" duration-ms="617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:21 EST" name="linkedListPage" finished-at="2024-11-11T22:10:21 EST" duration-ms="632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:21 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:22 EST" duration-ms="1227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:22 EST" name="backtoQueue" finished-at="2024-11-11T22:10:23 EST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:23 EST" name="linkedListPage" finished-at="2024-11-11T22:10:24 EST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:24 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:25 EST" duration-ms="1245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:25 EST" name="backtoQueue" finished-at="2024-11-11T22:10:25 EST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:25 EST" name="linkedListPage" finished-at="2024-11-11T22:10:26 EST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="arrayPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:26 EST" name="arrayPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:26 EST" duration-ms="399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:26 EST" name="backtoQueue" finished-at="2024-11-11T22:10:26 EST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:26 EST" name="linkedListPage" finished-at="2024-11-11T22:10:26 EST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:26 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:27 EST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:27 EST" name="backtoQueue" finished-at="2024-11-11T22:10:27 EST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:27 EST" name="linkedListPage" finished-at="2024-11-11T22:10:27 EST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:27 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:27 EST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:27 EST" name="backtoQueue" finished-at="2024-11-11T22:10:28 EST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:28 EST" name="linkedListPage" finished-at="2024-11-11T22:10:28 EST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:28 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:28 EST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:28 EST" name="backtoQueue" finished-at="2024-11-11T22:10:28 EST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:28 EST" name="linkedListPage" finished-at="2024-11-11T22:10:29 EST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:29 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:29 EST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:29 EST" name="backtoQueue" finished-at="2024-11-11T22:10:29 EST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:29 EST" name="linkedListPage" finished-at="2024-11-11T22:10:29 EST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:29 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:30 EST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:30 EST" name="backtoQueue" finished-at="2024-11-11T22:10:30 EST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:30 EST" name="linkedListPage" finished-at="2024-11-11T22:10:30 EST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:30 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:30 EST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:30 EST" name="backtoQueue" finished-at="2024-11-11T22:10:31 EST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:31 EST" name="linkedListPage" finished-at="2024-11-11T22:10:31 EST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="graphPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:31 EST" name="graphPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:31 EST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:31 EST" name="backtoQueue" finished-at="2024-11-11T22:10:31 EST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:31 EST" name="linkedListPage" finished-at="2024-11-11T22:10:31 EST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:31 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:32 EST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:32 EST" name="backtoQueue" finished-at="2024-11-11T22:10:32 EST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:32 EST" name="linkedListPage" finished-at="2024-11-11T22:10:32 EST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:32 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:33 EST" duration-ms="504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:33 EST" name="backtoQueue" finished-at="2024-11-11T22:10:33 EST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:33 EST" name="linkedListPage" finished-at="2024-11-11T22:10:33 EST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:33 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:34 EST" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:34 EST" name="backtoQueue" finished-at="2024-11-11T22:10:34 EST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:34 EST" name="linkedListPage" finished-at="2024-11-11T22:10:34 EST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:34 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:34 EST" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:34 EST" name="backtoQueue" finished-at="2024-11-11T22:10:35 EST" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:35 EST" name="linkedListPage" finished-at="2024-11-11T22:10:35 EST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:35 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:35 EST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:35 EST" name="backtoQueue" finished-at="2024-11-11T22:10:36 EST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:36 EST" name="linkedListPage" finished-at="2024-11-11T22:10:36 EST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:36 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:36 EST" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:36 EST" name="backtoQueue" finished-at="2024-11-11T22:10:36 EST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:36 EST" name="linkedListPage" finished-at="2024-11-11T22:10:37 EST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:37 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:10:37 EST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:37 EST" name="backtoQueue" finished-at="2024-11-11T22:10:37 EST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:37 EST" name="linkedListPage" finished-at="2024-11-11T22:10:37 EST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:37 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:38 EST" duration-ms="318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:38 EST" name="backtoQueue" finished-at="2024-11-11T22:10:38 EST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:38 EST" name="linkedListPage" finished-at="2024-11-11T22:10:38 EST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:38 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:38 EST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:38 EST" name="backtoQueue" finished-at="2024-11-11T22:10:39 EST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:39 EST" name="linkedListPage" finished-at="2024-11-11T22:10:39 EST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:39 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:39 EST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:39 EST" name="backtoQueue" finished-at="2024-11-11T22:10:39 EST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:39 EST" name="linkedListPage" finished-at="2024-11-11T22:10:39 EST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:39 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:40 EST" duration-ms="332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:40 EST" name="backtoQueue" finished-at="2024-11-11T22:10:40 EST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:40 EST" name="linkedListPage" finished-at="2024-11-11T22:10:40 EST" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:40 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:40 EST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:40 EST" name="backtoQueue" finished-at="2024-11-11T22:10:40 EST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:40 EST" name="linkedListPage" finished-at="2024-11-11T22:10:41 EST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:41 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:41 EST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:41 EST" name="backtoQueue" finished-at="2024-11-11T22:10:41 EST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:41 EST" name="linkedListPage" finished-at="2024-11-11T22:10:41 EST" duration-ms="280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="linkedListPageDropdn(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:41 EST" name="linkedListPageDropdn" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:42 EST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageDropdn -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:42 EST" name="backtoQueue" finished-at="2024-11-11T22:10:42 EST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:42 EST" name="linkedListPage" finished-at="2024-11-11T22:10:42 EST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:42 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:43 EST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:43 EST" name="backtoQueue" finished-at="2024-11-11T22:10:43 EST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:43 EST" name="linkedListPage" finished-at="2024-11-11T22:10:43 EST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:43 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:43 EST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:43 EST" name="backtoQueue" finished-at="2024-11-11T22:10:43 EST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:43 EST" name="linkedListPage" finished-at="2024-11-11T22:10:44 EST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:44 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:44 EST" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:44 EST" name="backtoQueue" finished-at="2024-11-11T22:10:44 EST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:44 EST" name="linkedListPage" finished-at="2024-11-11T22:10:44 EST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:44 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:45 EST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:45 EST" name="backtoQueue" finished-at="2024-11-11T22:10:45 EST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:45 EST" name="linkedListPage" finished-at="2024-11-11T22:10:45 EST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:45 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:46 EST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:46 EST" name="backtoQueue" finished-at="2024-11-11T22:10:46 EST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:46 EST" name="linkedListPage" finished-at="2024-11-11T22:10:46 EST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:46 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:46 EST" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:46 EST" name="backtoQueue" finished-at="2024-11-11T22:10:47 EST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:47 EST" name="linkedListPage" finished-at="2024-11-11T22:10:47 EST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:47 EST" name="nocodeTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:47 EST" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:47 EST" name="backtoQueue" finished-at="2024-11-11T22:10:47 EST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:47 EST" name="linkedListPage" finished-at="2024-11-11T22:10:48 EST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:48 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:48 EST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:48 EST" name="backtoQueue" finished-at="2024-11-11T22:10:48 EST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:48 EST" name="linkedListPage" finished-at="2024-11-11T22:10:48 EST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:48 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:49 EST" duration-ms="557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:49 EST" name="backtoQueue" finished-at="2024-11-11T22:10:49 EST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:49 EST" name="linkedListPage" finished-at="2024-11-11T22:10:50 EST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:50 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:50 EST" duration-ms="641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:50 EST" name="backtoQueue" finished-at="2024-11-11T22:10:51 EST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:51 EST" name="linkedListPage" finished-at="2024-11-11T22:10:51 EST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:51 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:52 EST" duration-ms="659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:52 EST" name="backtoQueue" finished-at="2024-11-11T22:10:52 EST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:52 EST" name="linkedListPage" finished-at="2024-11-11T22:10:53 EST" duration-ms="539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:53 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:54 EST" duration-ms="1042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:54 EST" name="backtoQueue" finished-at="2024-11-11T22:10:54 EST" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:54 EST" name="linkedListPage" finished-at="2024-11-11T22:10:55 EST" duration-ms="674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:55 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:56 EST" duration-ms="1046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:56 EST" name="backtoQueue" finished-at="2024-11-11T22:10:56 EST" duration-ms="522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:56 EST" name="linkedListPage" finished-at="2024-11-11T22:10:57 EST" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="queuePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:57 EST" name="queuePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:10:58 EST" duration-ms="1098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:58 EST" name="backtoQueue" finished-at="2024-11-11T22:10:59 EST" duration-ms="546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:59 EST" name="linkedListPage" finished-at="2024-11-11T22:10:59 EST" duration-ms="609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:10:59 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:00 EST" duration-ms="1189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:00 EST" name="backtoQueue" finished-at="2024-11-11T22:11:01 EST" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:01 EST" name="linkedListPage" finished-at="2024-11-11T22:11:02 EST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:02 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:03 EST" duration-ms="1152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:03 EST" name="backtoQueue" finished-at="2024-11-11T22:11:03 EST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:03 EST" name="linkedListPage" finished-at="2024-11-11T22:11:04 EST" duration-ms="652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:04 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:05 EST" duration-ms="1263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:05 EST" name="backtoQueue" finished-at="2024-11-11T22:11:06 EST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:06 EST" name="linkedListPage" finished-at="2024-11-11T22:11:06 EST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:06 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:08 EST" duration-ms="1298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:08 EST" name="backtoQueue" finished-at="2024-11-11T22:11:08 EST" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:08 EST" name="linkedListPage" finished-at="2024-11-11T22:11:09 EST" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:09 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:10 EST" duration-ms="1262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:10 EST" name="backtoQueue" finished-at="2024-11-11T22:11:11 EST" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:11 EST" name="linkedListPage" finished-at="2024-11-11T22:11:12 EST" duration-ms="686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:12 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:13 EST" duration-ms="1317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:13 EST" name="backtoQueue" finished-at="2024-11-11T22:11:14 EST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:14 EST" name="linkedListPage" finished-at="2024-11-11T22:11:14 EST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="stackPage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:14 EST" name="stackPage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:16 EST" duration-ms="1384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:16 EST" name="backtoQueue" finished-at="2024-11-11T22:11:17 EST" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:17 EST" name="linkedListPage" finished-at="2024-11-11T22:11:17 EST" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:17 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:18 EST" duration-ms="605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:18 EST" name="backtoQueue" finished-at="2024-11-11T22:11:19 EST" duration-ms="669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:19 EST" name="linkedListPage" finished-at="2024-11-11T22:11:19 EST" duration-ms="742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:19 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:20 EST" duration-ms="602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:20 EST" name="backtoQueue" finished-at="2024-11-11T22:11:21 EST" duration-ms="756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:21 EST" name="linkedListPage" finished-at="2024-11-11T22:11:21 EST" duration-ms="622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:21 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:22 EST" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:22 EST" name="backtoQueue" finished-at="2024-11-11T22:11:23 EST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:23 EST" name="linkedListPage" finished-at="2024-11-11T22:11:23 EST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:23 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:24 EST" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:24 EST" name="backtoQueue" finished-at="2024-11-11T22:11:25 EST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:25 EST" name="linkedListPage" finished-at="2024-11-11T22:11:25 EST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:25 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:26 EST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:26 EST" name="backtoQueue" finished-at="2024-11-11T22:11:27 EST" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:27 EST" name="linkedListPage" finished-at="2024-11-11T22:11:27 EST" duration-ms="667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:27 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:28 EST" duration-ms="597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:28 EST" name="backtoQueue" finished-at="2024-11-11T22:11:29 EST" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:29 EST" name="linkedListPage" finished-at="2024-11-11T22:11:29 EST" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="topicsLinkedList(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:29 EST" name="topicsLinkedList" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:30 EST" duration-ms="608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsLinkedList -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:30 EST" name="backtoQueue" finished-at="2024-11-11T22:11:31 EST" duration-ms="738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:31 EST" name="linkedListPage" finished-at="2024-11-11T22:11:31 EST" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:31 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:33 EST" duration-ms="1303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:33 EST" name="backtoQueue" finished-at="2024-11-11T22:11:33 EST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:33 EST" name="linkedListPage" finished-at="2024-11-11T22:11:34 EST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:34 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:35 EST" duration-ms="1301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:35 EST" name="backtoQueue" finished-at="2024-11-11T22:11:36 EST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:36 EST" name="linkedListPage" finished-at="2024-11-11T22:11:37 EST" duration-ms="737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:37 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:38 EST" duration-ms="1304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:38 EST" name="backtoQueue" finished-at="2024-11-11T22:11:39 EST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:39 EST" name="linkedListPage" finished-at="2024-11-11T22:11:40 EST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:40 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:41 EST" duration-ms="1319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:41 EST" name="backtoQueue" finished-at="2024-11-11T22:11:42 EST" duration-ms="729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:42 EST" name="linkedListPage" finished-at="2024-11-11T22:11:43 EST" duration-ms="692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:43 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:44 EST" duration-ms="1286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:44 EST" name="backtoQueue" finished-at="2024-11-11T22:11:45 EST" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:45 EST" name="linkedListPage" finished-at="2024-11-11T22:11:45 EST" duration-ms="685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:45 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:47 EST" duration-ms="1395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:47 EST" name="backtoQueue" finished-at="2024-11-11T22:11:47 EST" duration-ms="723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:47 EST" name="linkedListPage" finished-at="2024-11-11T22:11:48 EST" duration-ms="698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="treePage(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:48 EST" name="treePage" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:49 EST" duration-ms="1332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:49 EST" name="backtoQueue" finished-at="2024-11-11T22:11:50 EST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:50 EST" name="linkedListPage" finished-at="2024-11-11T22:11:51 EST" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:51 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:52 EST" duration-ms="1329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Introduction]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:52 EST" name="backtoQueue" finished-at="2024-11-11T22:11:53 EST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:53 EST" name="linkedListPage" finished-at="2024-11-11T22:11:54 EST" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:54 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:55 EST" duration-ms="1271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Creating Linked LIst]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:55 EST" name="backtoQueue" finished-at="2024-11-11T22:11:56 EST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:56 EST" name="linkedListPage" finished-at="2024-11-11T22:11:56 EST" duration-ms="740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:56 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:11:58 EST" duration-ms="1391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Linked List]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:58 EST" name="backtoQueue" finished-at="2024-11-11T22:11:58 EST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:58 EST" name="linkedListPage" finished-at="2024-11-11T22:11:59 EST" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:11:59 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:12:01 EST" duration-ms="1335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implement Linked List in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:01 EST" name="backtoQueue" finished-at="2024-11-11T22:12:01 EST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:01 EST" name="linkedListPage" finished-at="2024-11-11T22:12:02 EST" duration-ms="705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:02 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:12:03 EST" duration-ms="1269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:03 EST" name="backtoQueue" finished-at="2024-11-11T22:12:04 EST" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:04 EST" name="linkedListPage" finished-at="2024-11-11T22:12:05 EST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:05 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:12:06 EST" duration-ms="1253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Insertion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:06 EST" name="backtoQueue" finished-at="2024-11-11T22:12:07 EST" duration-ms="761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:07 EST" name="linkedListPage" finished-at="2024-11-11T22:12:07 EST" duration-ms="765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:07 EST" name="tryHereTopics" data-provider="LinkedList Topics" finished-at="2024-11-11T22:12:09 EST" duration-ms="1272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Deletion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:09 EST" name="backtoQueue" finished-at="2024-11-11T22:12:10 EST" duration-ms="745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:10 EST" name="linkedListPage" finished-at="2024-11-11T22:12:10 EST" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:10 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:12 EST" duration-ms="1679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:12 EST" name="backtoQueue" finished-at="2024-11-11T22:12:13 EST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:13 EST" name="linkedListPage" finished-at="2024-11-11T22:12:13 EST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:13 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:15 EST" duration-ms="1597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:15 EST" name="backtoQueue" finished-at="2024-11-11T22:12:16 EST" duration-ms="578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:16 EST" name="linkedListPage" finished-at="2024-11-11T22:12:16 EST" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:16 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:18 EST" duration-ms="1732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:18 EST" name="backtoQueue" finished-at="2024-11-11T22:12:19 EST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:19 EST" name="linkedListPage" finished-at="2024-11-11T22:12:20 EST" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:20 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:21 EST" duration-ms="1659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:21 EST" name="backtoQueue" finished-at="2024-11-11T22:12:22 EST" duration-ms="755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:22 EST" name="linkedListPage" finished-at="2024-11-11T22:12:23 EST" duration-ms="759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:23 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:24 EST" duration-ms="1626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:24 EST" name="backtoQueue" finished-at="2024-11-11T22:12:25 EST" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:25 EST" name="linkedListPage" finished-at="2024-11-11T22:12:26 EST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:26 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:27 EST" duration-ms="1595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:27 EST" name="backtoQueue" finished-at="2024-11-11T22:12:28 EST" duration-ms="877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="linkedListPage()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:28 EST" name="linkedListPage" finished-at="2024-11-11T22:12:29 EST" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:29 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:12:31 EST" duration-ms="1883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:31 EST" name="backtoQueue" finished-at="2024-11-11T22:12:32 EST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.LinkedListPageEvents@4b4dd216]" started-at="2024-11-11T22:12:32 EST" name="Logout" finished-at="2024-11-11T22:12:32 EST" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.LinkedListPageEvents -->
      <class name="pageTestEvents.StackPageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:23 EST" name="Login" finished-at="2024-11-11T22:15:25 EST" duration-ms="1717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:25 EST" name="stackPage" finished-at="2024-11-11T22:15:26 EST" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:26 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:15:28 EST" duration-ms="1682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:28 EST" name="backtostack" finished-at="2024-11-11T22:15:29 EST" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:29 EST" name="stackPage" finished-at="2024-11-11T22:15:29 EST" duration-ms="686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:29 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:15:31 EST" duration-ms="1613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:31 EST" name="backtostack" finished-at="2024-11-11T22:15:32 EST" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:32 EST" name="stackPage" finished-at="2024-11-11T22:15:32 EST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:32 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:15:34 EST" duration-ms="1683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:34 EST" name="backtostack" finished-at="2024-11-11T22:15:35 EST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:35 EST" name="stackPage" finished-at="2024-11-11T22:15:36 EST" duration-ms="866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:36 EST" name="nocodeTopics" data-provider="Stack Topics" finished-at="2024-11-11T22:15:37 EST" duration-ms="1475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:37 EST" name="backtostack" finished-at="2024-11-11T22:15:38 EST" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:38 EST" name="stackPage" finished-at="2024-11-11T22:15:38 EST" duration-ms="741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:38 EST" name="nocodeTopics" data-provider="Stack Topics" finished-at="2024-11-11T22:15:40 EST" duration-ms="1457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:40 EST" name="backtostack" finished-at="2024-11-11T22:15:41 EST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:41 EST" name="stackPage" finished-at="2024-11-11T22:15:41 EST" duration-ms="763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:41 EST" name="nocodeTopics" data-provider="Stack Topics" finished-at="2024-11-11T22:15:43 EST" duration-ms="1449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:43 EST" name="backtostack" finished-at="2024-11-11T22:15:43 EST" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:43 EST" name="stackPage" finished-at="2024-11-11T22:15:44 EST" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="topicsStack(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:44 EST" name="topicsStack" data-provider="Stack Topics" finished-at="2024-11-11T22:15:45 EST" duration-ms="596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsStack -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:45 EST" name="backtostack" finished-at="2024-11-11T22:15:46 EST" duration-ms="765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:46 EST" name="stackPage" finished-at="2024-11-11T22:15:46 EST" duration-ms="733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="topicsStack(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:46 EST" name="topicsStack" data-provider="Stack Topics" finished-at="2024-11-11T22:15:47 EST" duration-ms="610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsStack -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:47 EST" name="backtostack" finished-at="2024-11-11T22:15:48 EST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:48 EST" name="stackPage" finished-at="2024-11-11T22:15:48 EST" duration-ms="687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="topicsStack(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:48 EST" name="topicsStack" data-provider="Stack Topics" finished-at="2024-11-11T22:15:49 EST" duration-ms="630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsStack -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:49 EST" name="backtostack" finished-at="2024-11-11T22:15:50 EST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:50 EST" name="stackPage" finished-at="2024-11-11T22:15:50 EST" duration-ms="744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:50 EST" name="tryHereTopics" data-provider="Stack Topics" finished-at="2024-11-11T22:15:52 EST" duration-ms="1311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Operations in Stack]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:52 EST" name="backtostack" finished-at="2024-11-11T22:15:52 EST" duration-ms="663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:52 EST" name="stackPage" finished-at="2024-11-11T22:15:53 EST" duration-ms="733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:53 EST" name="tryHereTopics" data-provider="Stack Topics" finished-at="2024-11-11T22:15:54 EST" duration-ms="1297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:54 EST" name="backtostack" finished-at="2024-11-11T22:15:55 EST" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:55 EST" name="stackPage" finished-at="2024-11-11T22:15:56 EST" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:56 EST" name="tryHereTopics" data-provider="Stack Topics" finished-at="2024-11-11T22:15:57 EST" duration-ms="1355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:57 EST" name="backtostack" finished-at="2024-11-11T22:15:58 EST" duration-ms="665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:58 EST" name="stackPage" finished-at="2024-11-11T22:15:59 EST" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:15:59 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:16:00 EST" duration-ms="1676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:00 EST" name="backtostack" finished-at="2024-11-11T22:16:01 EST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:01 EST" name="stackPage" finished-at="2024-11-11T22:16:02 EST" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:02 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:16:03 EST" duration-ms="1650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:03 EST" name="backtostack" finished-at="2024-11-11T22:16:04 EST" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="stackPage()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:04 EST" name="stackPage" finished-at="2024-11-11T22:16:05 EST" duration-ms="747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:05 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:16:06 EST" duration-ms="1650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:06 EST" name="backtostack" finished-at="2024-11-11T22:16:07 EST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.StackPageEvents@1051817b]" started-at="2024-11-11T22:16:07 EST" name="Logout" finished-at="2024-11-11T22:16:08 EST" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.StackPageEvents -->
      <class name="pageTestEvents.TreePageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:08 EST" name="Login" finished-at="2024-11-11T22:16:09 EST" duration-ms="1510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:09 EST" name="treePage" finished-at="2024-11-11T22:16:10 EST" duration-ms="1098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:10 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:12 EST" duration-ms="1813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:12 EST" name="backtostack" finished-at="2024-11-11T22:16:13 EST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:13 EST" name="treePage" finished-at="2024-11-11T22:16:14 EST" duration-ms="735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:14 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:15 EST" duration-ms="1531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:15 EST" name="backtostack" finished-at="2024-11-11T22:16:16 EST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:16 EST" name="treePage" finished-at="2024-11-11T22:16:17 EST" duration-ms="825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:17 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:19 EST" duration-ms="1881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:19 EST" name="backtostack" finished-at="2024-11-11T22:16:19 EST" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:19 EST" name="treePage" finished-at="2024-11-11T22:16:20 EST" duration-ms="779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:20 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:22 EST" duration-ms="1728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:22 EST" name="backtostack" finished-at="2024-11-11T22:16:23 EST" duration-ms="756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:23 EST" name="treePage" finished-at="2024-11-11T22:16:23 EST" duration-ms="792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:23 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:25 EST" duration-ms="1704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:25 EST" name="backtostack" finished-at="2024-11-11T22:16:26 EST" duration-ms="828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:26 EST" name="treePage" finished-at="2024-11-11T22:16:27 EST" duration-ms="742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:27 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:28 EST" duration-ms="1724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:28 EST" name="backtostack" finished-at="2024-11-11T22:16:29 EST" duration-ms="866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:29 EST" name="treePage" finished-at="2024-11-11T22:16:30 EST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:30 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:32 EST" duration-ms="1790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:32 EST" name="backtostack" finished-at="2024-11-11T22:16:32 EST" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:32 EST" name="treePage" finished-at="2024-11-11T22:16:33 EST" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:33 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:35 EST" duration-ms="1558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:35 EST" name="backtostack" finished-at="2024-11-11T22:16:36 EST" duration-ms="745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:36 EST" name="treePage" finished-at="2024-11-11T22:16:36 EST" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:36 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:38 EST" duration-ms="1756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:38 EST" name="backtostack" finished-at="2024-11-11T22:16:39 EST" duration-ms="814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:39 EST" name="treePage" finished-at="2024-11-11T22:16:40 EST" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:40 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:41 EST" duration-ms="1689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:41 EST" name="backtostack" finished-at="2024-11-11T22:16:42 EST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:42 EST" name="treePage" finished-at="2024-11-11T22:16:43 EST" duration-ms="804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:43 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:44 EST" duration-ms="1626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:44 EST" name="backtostack" finished-at="2024-11-11T22:16:45 EST" duration-ms="741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:45 EST" name="treePage" finished-at="2024-11-11T22:16:46 EST" duration-ms="828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:46 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:48 EST" duration-ms="2031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:48 EST" name="backtostack" finished-at="2024-11-11T22:16:49 EST" duration-ms="815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:49 EST" name="treePage" finished-at="2024-11-11T22:16:50 EST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="invalidTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:50 EST" name="invalidTopics" data-provider="invalidcode Topics" finished-at="2024-11-11T22:16:51 EST" duration-ms="1685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:51 EST" name="backtostack" finished-at="2024-11-11T22:16:52 EST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:52 EST" name="treePage" finished-at="2024-11-11T22:16:53 EST" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:53 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:16:54 EST" duration-ms="1478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:54 EST" name="backtostack" finished-at="2024-11-11T22:16:55 EST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:55 EST" name="treePage" finished-at="2024-11-11T22:16:56 EST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:56 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:16:57 EST" duration-ms="1453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:57 EST" name="backtostack" finished-at="2024-11-11T22:16:58 EST" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:58 EST" name="treePage" finished-at="2024-11-11T22:16:58 EST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:58 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:16:59 EST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:59 EST" name="backtostack" finished-at="2024-11-11T22:16:59 EST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:59 EST" name="treePage" finished-at="2024-11-11T22:16:59 EST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:59 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:16:59 EST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:16:59 EST" name="backtostack" finished-at="2024-11-11T22:17:00 EST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:00 EST" name="treePage" finished-at="2024-11-11T22:17:00 EST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:00 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:00 EST" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:00 EST" name="backtostack" finished-at="2024-11-11T22:17:00 EST" duration-ms="172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:00 EST" name="treePage" finished-at="2024-11-11T22:17:01 EST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:01 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:01 EST" duration-ms="393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:01 EST" name="backtostack" finished-at="2024-11-11T22:17:01 EST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:01 EST" name="treePage" finished-at="2024-11-11T22:17:01 EST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:01 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:02 EST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:02 EST" name="backtostack" finished-at="2024-11-11T22:17:02 EST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:02 EST" name="treePage" finished-at="2024-11-11T22:17:02 EST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:02 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:03 EST" duration-ms="421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:03 EST" name="backtostack" finished-at="2024-11-11T22:17:03 EST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:03 EST" name="treePage" finished-at="2024-11-11T22:17:03 EST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:03 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:03 EST" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:03 EST" name="backtostack" finished-at="2024-11-11T22:17:04 EST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:04 EST" name="treePage" finished-at="2024-11-11T22:17:04 EST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:04 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:04 EST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:04 EST" name="backtostack" finished-at="2024-11-11T22:17:05 EST" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:05 EST" name="treePage" finished-at="2024-11-11T22:17:05 EST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:05 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:05 EST" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:05 EST" name="backtostack" finished-at="2024-11-11T22:17:05 EST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:05 EST" name="treePage" finished-at="2024-11-11T22:17:06 EST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:06 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:06 EST" duration-ms="470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:06 EST" name="backtostack" finished-at="2024-11-11T22:17:06 EST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:06 EST" name="treePage" finished-at="2024-11-11T22:17:06 EST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="nocodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:06 EST" name="nocodeTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:07 EST" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:07 EST" name="backtostack" finished-at="2024-11-11T22:17:07 EST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:07 EST" name="treePage" finished-at="2024-11-11T22:17:07 EST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:07 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:07 EST" duration-ms="150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:07 EST" name="backtostack" finished-at="2024-11-11T22:17:08 EST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:08 EST" name="treePage" finished-at="2024-11-11T22:17:08 EST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:08 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:08 EST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:08 EST" name="backtostack" finished-at="2024-11-11T22:17:08 EST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:08 EST" name="treePage" finished-at="2024-11-11T22:17:08 EST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:08 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:08 EST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:08 EST" name="backtostack" finished-at="2024-11-11T22:17:09 EST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:09 EST" name="treePage" finished-at="2024-11-11T22:17:09 EST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:09 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:09 EST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:09 EST" name="backtostack" finished-at="2024-11-11T22:17:09 EST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:09 EST" name="treePage" finished-at="2024-11-11T22:17:09 EST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:09 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:10 EST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:10 EST" name="backtostack" finished-at="2024-11-11T22:17:10 EST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:10 EST" name="treePage" finished-at="2024-11-11T22:17:10 EST" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:10 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:10 EST" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:10 EST" name="backtostack" finished-at="2024-11-11T22:17:10 EST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:10 EST" name="treePage" finished-at="2024-11-11T22:17:11 EST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:11 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:11 EST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:11 EST" name="backtostack" finished-at="2024-11-11T22:17:11 EST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:11 EST" name="treePage" finished-at="2024-11-11T22:17:11 EST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:11 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:11 EST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:11 EST" name="backtostack" finished-at="2024-11-11T22:17:11 EST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:11 EST" name="treePage" finished-at="2024-11-11T22:17:12 EST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:12 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:12 EST" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:12 EST" name="backtostack" finished-at="2024-11-11T22:17:12 EST" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:12 EST" name="treePage" finished-at="2024-11-11T22:17:12 EST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:12 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:12 EST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:12 EST" name="backtostack" finished-at="2024-11-11T22:17:13 EST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:13 EST" name="treePage" finished-at="2024-11-11T22:17:13 EST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:13 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:13 EST" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:13 EST" name="backtostack" finished-at="2024-11-11T22:17:13 EST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:13 EST" name="treePage" finished-at="2024-11-11T22:17:13 EST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:13 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:13 EST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:13 EST" name="backtostack" finished-at="2024-11-11T22:17:14 EST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:14 EST" name="treePage" finished-at="2024-11-11T22:17:14 EST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="topicsTree(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:14 EST" name="topicsTree" data-provider="Tree Topics" finished-at="2024-11-11T22:17:14 EST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicsTree -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:14 EST" name="backtostack" finished-at="2024-11-11T22:17:14 EST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:14 EST" name="treePage" finished-at="2024-11-11T22:17:14 EST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:14 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:15 EST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Overview of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:15 EST" name="backtostack" finished-at="2024-11-11T22:17:15 EST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:15 EST" name="treePage" finished-at="2024-11-11T22:17:15 EST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:15 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:15 EST" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Terminologies]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:15 EST" name="backtostack" finished-at="2024-11-11T22:17:16 EST" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:16 EST" name="treePage" finished-at="2024-11-11T22:17:16 EST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:16 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:16 EST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:16 EST" name="backtostack" finished-at="2024-11-11T22:17:17 EST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:17 EST" name="treePage" finished-at="2024-11-11T22:17:17 EST" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:17 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:17 EST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:17 EST" name="backtostack" finished-at="2024-11-11T22:17:18 EST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:18 EST" name="treePage" finished-at="2024-11-11T22:17:18 EST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:18 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:18 EST" duration-ms="369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Traversals-Illustration]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:18 EST" name="backtostack" finished-at="2024-11-11T22:17:18 EST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:18 EST" name="treePage" finished-at="2024-11-11T22:17:19 EST" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:19 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:19 EST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:19 EST" name="backtostack" finished-at="2024-11-11T22:17:19 EST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:19 EST" name="treePage" finished-at="2024-11-11T22:17:20 EST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:20 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:20 EST" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Types of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:20 EST" name="backtostack" finished-at="2024-11-11T22:17:20 EST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:20 EST" name="treePage" finished-at="2024-11-11T22:17:20 EST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:20 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:21 EST" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation in Python]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:21 EST" name="backtostack" finished-at="2024-11-11T22:17:21 EST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:21 EST" name="treePage" finished-at="2024-11-11T22:17:21 EST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:21 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:22 EST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Tree Traversals]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:22 EST" name="backtostack" finished-at="2024-11-11T22:17:22 EST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:22 EST" name="treePage" finished-at="2024-11-11T22:17:22 EST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:22 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:23 EST" duration-ms="653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation of Binary Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:23 EST" name="backtostack" finished-at="2024-11-11T22:17:23 EST" duration-ms="404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:23 EST" name="treePage" finished-at="2024-11-11T22:17:23 EST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:23 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:24 EST" duration-ms="525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Applications of Binary trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:24 EST" name="backtostack" finished-at="2024-11-11T22:17:24 EST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:24 EST" name="treePage" finished-at="2024-11-11T22:17:24 EST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:24 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:25 EST" duration-ms="458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Binary Search Trees]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:25 EST" name="backtostack" finished-at="2024-11-11T22:17:25 EST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:25 EST" name="treePage" finished-at="2024-11-11T22:17:25 EST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="tryHereTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:25 EST" name="tryHereTopics" data-provider="Tree Topics" finished-at="2024-11-11T22:17:26 EST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Implementation Of BST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:26 EST" name="backtostack" finished-at="2024-11-11T22:17:26 EST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:26 EST" name="treePage" finished-at="2024-11-11T22:17:26 EST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:26 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:27 EST" duration-ms="477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:27 EST" name="backtostack" finished-at="2024-11-11T22:17:27 EST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:27 EST" name="treePage" finished-at="2024-11-11T22:17:27 EST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:27 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:28 EST" duration-ms="529" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:28 EST" name="backtostack" finished-at="2024-11-11T22:17:28 EST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:28 EST" name="treePage" finished-at="2024-11-11T22:17:28 EST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:28 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:29 EST" duration-ms="544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:29 EST" name="backtostack" finished-at="2024-11-11T22:17:29 EST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:29 EST" name="treePage" finished-at="2024-11-11T22:17:29 EST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:29 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:30 EST" duration-ms="632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:30 EST" name="backtostack" finished-at="2024-11-11T22:17:30 EST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:30 EST" name="treePage" finished-at="2024-11-11T22:17:30 EST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:30 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:31 EST" duration-ms="555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:31 EST" name="backtostack" finished-at="2024-11-11T22:17:31 EST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:31 EST" name="treePage" finished-at="2024-11-11T22:17:31 EST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:31 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:32 EST" duration-ms="535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:32 EST" name="backtostack" finished-at="2024-11-11T22:17:32 EST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:32 EST" name="treePage" finished-at="2024-11-11T22:17:32 EST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:32 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:33 EST" duration-ms="518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:33 EST" name="backtostack" finished-at="2024-11-11T22:17:33 EST" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:33 EST" name="treePage" finished-at="2024-11-11T22:17:33 EST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:33 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:34 EST" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:34 EST" name="backtostack" finished-at="2024-11-11T22:17:34 EST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:34 EST" name="treePage" finished-at="2024-11-11T22:17:34 EST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:34 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:35 EST" duration-ms="552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:35 EST" name="backtostack" finished-at="2024-11-11T22:17:35 EST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:35 EST" name="treePage" finished-at="2024-11-11T22:17:35 EST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:35 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:36 EST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:36 EST" name="backtostack" finished-at="2024-11-11T22:17:36 EST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:36 EST" name="treePage" finished-at="2024-11-11T22:17:36 EST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:36 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:37 EST" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:37 EST" name="backtostack" finished-at="2024-11-11T22:17:37 EST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:37 EST" name="treePage" finished-at="2024-11-11T22:17:37 EST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:37 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:38 EST" duration-ms="532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:38 EST" name="backtostack" finished-at="2024-11-11T22:17:38 EST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="treePage()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:38 EST" name="treePage" finished-at="2024-11-11T22:17:38 EST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method signature="validcodeTopics(int,java.lang.String)[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:38 EST" name="validcodeTopics" data-provider="validcode Topics" finished-at="2024-11-11T22:17:39 EST" duration-ms="519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcodeTopics -->
        <test-method is-config="true" signature="backtostack()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:39 EST" name="backtostack" finished-at="2024-11-11T22:17:39 EST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtostack -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.TreePageEvents@35293c05]" started-at="2024-11-11T22:17:39 EST" name="Logout" finished-at="2024-11-11T22:17:39 EST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.TreePageEvents -->
      <class name="pageTestEvents.QueuePageEvents">
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:32 EST" name="Login" finished-at="2024-11-11T22:12:34 EST" duration-ms="1778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:34 EST" name="queuePage" finished-at="2024-11-11T22:12:35 EST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:35 EST" name="arrayPage" finished-at="2024-11-11T22:12:36 EST" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:36 EST" name="backtoQueue" finished-at="2024-11-11T22:12:37 EST" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:37 EST" name="queuePage" finished-at="2024-11-11T22:12:38 EST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:38 EST" name="arrayPageT1" finished-at="2024-11-11T22:12:39 EST" duration-ms="1540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:39 EST" name="backtoQueue" finished-at="2024-11-11T22:12:40 EST" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:40 EST" name="queuePage" finished-at="2024-11-11T22:12:41 EST" duration-ms="1075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:41 EST" name="arrayPageT2" finished-at="2024-11-11T22:12:43 EST" duration-ms="1878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:43 EST" name="backtoQueue" finished-at="2024-11-11T22:12:44 EST" duration-ms="752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:44 EST" name="queuePage" finished-at="2024-11-11T22:12:44 EST" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:44 EST" name="arrayPageT3" finished-at="2024-11-11T22:12:46 EST" duration-ms="1334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:46 EST" name="backtoQueue" finished-at="2024-11-11T22:12:46 EST" duration-ms="705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:46 EST" name="queuePage" finished-at="2024-11-11T22:12:47 EST" duration-ms="819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="arrayPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:47 EST" name="arrayPageT4" finished-at="2024-11-11T22:12:49 EST" duration-ms="1360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:49 EST" name="backtoQueue" finished-at="2024-11-11T22:12:49 EST" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:49 EST" name="queuePage" finished-at="2024-11-11T22:12:50 EST" duration-ms="864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:50 EST" name="graphPage" finished-at="2024-11-11T22:12:51 EST" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:51 EST" name="backtoQueue" finished-at="2024-11-11T22:12:52 EST" duration-ms="787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:52 EST" name="queuePage" finished-at="2024-11-11T22:12:52 EST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:52 EST" name="graphPageT1" finished-at="2024-11-11T22:12:54 EST" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:54 EST" name="backtoQueue" finished-at="2024-11-11T22:12:54 EST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:54 EST" name="queuePage" finished-at="2024-11-11T22:12:55 EST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:55 EST" name="graphPageT2" finished-at="2024-11-11T22:12:56 EST" duration-ms="1256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:56 EST" name="backtoQueue" finished-at="2024-11-11T22:12:57 EST" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:57 EST" name="queuePage" finished-at="2024-11-11T22:12:58 EST" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:58 EST" name="graphPageT3" finished-at="2024-11-11T22:12:59 EST" duration-ms="1380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:12:59 EST" name="backtoQueue" finished-at="2024-11-11T22:13:00 EST" duration-ms="731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:00 EST" name="queuePage" finished-at="2024-11-11T22:13:01 EST" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="graphPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:01 EST" name="graphPageT4" finished-at="2024-11-11T22:13:02 EST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:02 EST" name="backtoQueue" finished-at="2024-11-11T22:13:03 EST" duration-ms="748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:03 EST" name="queuePage" finished-at="2024-11-11T22:13:03 EST" duration-ms="716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="implementationofQueueinPythonTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:03 EST" name="implementationofQueueinPythonTopic" finished-at="2024-11-11T22:13:04 EST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementationofQueueinPythonTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:04 EST" name="backtoQueue" finished-at="2024-11-11T22:13:05 EST" duration-ms="660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:05 EST" name="queuePage" finished-at="2024-11-11T22:13:05 EST" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="implementationusingarrayTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:05 EST" name="implementationusingarrayTopic" finished-at="2024-11-11T22:13:06 EST" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementationusingarrayTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:06 EST" name="backtoQueue" finished-at="2024-11-11T22:13:07 EST" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:07 EST" name="queuePage" finished-at="2024-11-11T22:13:07 EST" duration-ms="643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="implementationusingcollectionsdequeTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:07 EST" name="implementationusingcollectionsdequeTopic" finished-at="2024-11-11T22:13:08 EST" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- implementationusingcollectionsdequeTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:08 EST" name="backtoQueue" finished-at="2024-11-11T22:13:09 EST" duration-ms="772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:09 EST" name="queuePage" finished-at="2024-11-11T22:13:10 EST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT1(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:10 EST" name="invalidCodeT1" data-provider="Python Code" finished-at="2024-11-11T22:13:11 EST" duration-ms="1486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:11 EST" name="backtoQueue" finished-at="2024-11-11T22:13:12 EST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:12 EST" name="queuePage" finished-at="2024-11-11T22:13:13 EST" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT2(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:13 EST" name="invalidCodeT2" data-provider="Python Code" finished-at="2024-11-11T22:13:14 EST" duration-ms="1519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:14 EST" name="backtoQueue" finished-at="2024-11-11T22:13:15 EST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:15 EST" name="queuePage" finished-at="2024-11-11T22:13:15 EST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT3(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:15 EST" name="invalidCodeT3" data-provider="Python Code" finished-at="2024-11-11T22:13:17 EST" duration-ms="1578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:17 EST" name="backtoQueue" finished-at="2024-11-11T22:13:18 EST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:18 EST" name="queuePage" finished-at="2024-11-11T22:13:19 EST" duration-ms="768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="invalidCodeT4(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:19 EST" name="invalidCodeT4" data-provider="Python Code" finished-at="2024-11-11T22:13:20 EST" duration-ms="1671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:20 EST" name="backtoQueue" finished-at="2024-11-11T22:13:21 EST" duration-ms="778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:21 EST" name="queuePage" finished-at="2024-11-11T22:13:22 EST" duration-ms="788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:22 EST" name="linkedListPage" finished-at="2024-11-11T22:13:22 EST" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:22 EST" name="backtoQueue" finished-at="2024-11-11T22:13:23 EST" duration-ms="812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:23 EST" name="queuePage" finished-at="2024-11-11T22:13:24 EST" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:24 EST" name="linkedListPageT1" finished-at="2024-11-11T22:13:25 EST" duration-ms="1245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:25 EST" name="backtoQueue" finished-at="2024-11-11T22:13:26 EST" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:26 EST" name="queuePage" finished-at="2024-11-11T22:13:27 EST" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:27 EST" name="linkedListPageT2" finished-at="2024-11-11T22:13:28 EST" duration-ms="1303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:28 EST" name="backtoQueue" finished-at="2024-11-11T22:13:29 EST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:29 EST" name="queuePage" finished-at="2024-11-11T22:13:29 EST" duration-ms="713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:29 EST" name="linkedListPageT3" finished-at="2024-11-11T22:13:31 EST" duration-ms="1714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:31 EST" name="backtoQueue" finished-at="2024-11-11T22:13:32 EST" duration-ms="792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:32 EST" name="queuePage" finished-at="2024-11-11T22:13:33 EST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="linkedListPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:33 EST" name="linkedListPageT4" finished-at="2024-11-11T22:13:34 EST" duration-ms="1367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:34 EST" name="backtoQueue" finished-at="2024-11-11T22:13:35 EST" duration-ms="757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:35 EST" name="queuePage" finished-at="2024-11-11T22:13:36 EST" duration-ms="770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:36 EST" name="nocodeTopic1" finished-at="2024-11-11T22:13:37 EST" duration-ms="1619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:37 EST" name="backtoQueue" finished-at="2024-11-11T22:13:38 EST" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:38 EST" name="queuePage" finished-at="2024-11-11T22:13:39 EST" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:39 EST" name="nocodeTopic2" finished-at="2024-11-11T22:13:40 EST" duration-ms="1529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:40 EST" name="backtoQueue" finished-at="2024-11-11T22:13:41 EST" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:41 EST" name="queuePage" finished-at="2024-11-11T22:13:42 EST" duration-ms="828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:42 EST" name="nocodeTopic3" finished-at="2024-11-11T22:13:44 EST" duration-ms="1580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:44 EST" name="backtoQueue" finished-at="2024-11-11T22:13:44 EST" duration-ms="770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:44 EST" name="queuePage" finished-at="2024-11-11T22:13:45 EST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="nocodeTopic4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:45 EST" name="nocodeTopic4" finished-at="2024-11-11T22:13:47 EST" duration-ms="1524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeTopic4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:47 EST" name="backtoQueue" finished-at="2024-11-11T22:13:48 EST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:48 EST" name="queuePage" finished-at="2024-11-11T22:13:48 EST" duration-ms="784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="practiceQueTopic1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:48 EST" name="practiceQueTopic1" finished-at="2024-11-11T22:13:50 EST" duration-ms="1204" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Queue] but found [Practice Questions]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Queue] but found [Practice Questions]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.QueuePageEvents.practiceQueTopic1(QueuePageEvents.java:109)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQueTopic1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:50 EST" name="backtoQueue" finished-at="2024-11-11T22:13:50 EST" duration-ms="744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:50 EST" name="queuePage" finished-at="2024-11-11T22:13:51 EST" duration-ms="942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:51 EST" name="queueDropPage" finished-at="2024-11-11T22:13:52 EST" duration-ms="820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:52 EST" name="backtoQueue" finished-at="2024-11-11T22:13:53 EST" duration-ms="983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:53 EST" name="queuePage" finished-at="2024-11-11T22:13:54 EST" duration-ms="905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:54 EST" name="queueDropPageT1" finished-at="2024-11-11T22:13:55 EST" duration-ms="1317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:55 EST" name="backtoQueue" finished-at="2024-11-11T22:13:56 EST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:56 EST" name="queuePage" finished-at="2024-11-11T22:13:57 EST" duration-ms="744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:57 EST" name="queueDropPageT2" finished-at="2024-11-11T22:13:58 EST" duration-ms="1381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:58 EST" name="backtoQueue" finished-at="2024-11-11T22:13:59 EST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:13:59 EST" name="queuePage" finished-at="2024-11-11T22:14:00 EST" duration-ms="814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:00 EST" name="queueDropPageT3" finished-at="2024-11-11T22:14:01 EST" duration-ms="1396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:01 EST" name="backtoQueue" finished-at="2024-11-11T22:14:02 EST" duration-ms="883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:02 EST" name="queuePage" finished-at="2024-11-11T22:14:03 EST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueDropPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:03 EST" name="queueDropPageT4" finished-at="2024-11-11T22:14:04 EST" duration-ms="1329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueDropPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:04 EST" name="backtoQueue" finished-at="2024-11-11T22:14:05 EST" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:05 EST" name="queuePage" finished-at="2024-11-11T22:14:06 EST" duration-ms="712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="queueOperationsTopic()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:06 EST" name="queueOperationsTopic" finished-at="2024-11-11T22:14:06 EST" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queueOperationsTopic -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:06 EST" name="backtoQueue" finished-at="2024-11-11T22:14:07 EST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:07 EST" name="queuePage" finished-at="2024-11-11T22:14:08 EST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:08 EST" name="stackPage" finished-at="2024-11-11T22:14:09 EST" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:09 EST" name="backtoQueue" finished-at="2024-11-11T22:14:09 EST" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:09 EST" name="queuePage" finished-at="2024-11-11T22:14:10 EST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:10 EST" name="stackPageT1" finished-at="2024-11-11T22:14:11 EST" duration-ms="1328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:11 EST" name="backtoQueue" finished-at="2024-11-11T22:14:12 EST" duration-ms="853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:12 EST" name="queuePage" finished-at="2024-11-11T22:14:13 EST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:13 EST" name="stackPageT2" finished-at="2024-11-11T22:14:14 EST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:14 EST" name="backtoQueue" finished-at="2024-11-11T22:14:15 EST" duration-ms="767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:15 EST" name="queuePage" finished-at="2024-11-11T22:14:16 EST" duration-ms="623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:16 EST" name="stackPageT3" finished-at="2024-11-11T22:14:17 EST" duration-ms="1310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:17 EST" name="backtoQueue" finished-at="2024-11-11T22:14:18 EST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:18 EST" name="queuePage" finished-at="2024-11-11T22:14:18 EST" duration-ms="660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="stackPageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:18 EST" name="stackPageT4" finished-at="2024-11-11T22:14:20 EST" duration-ms="1340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:20 EST" name="backtoQueue" finished-at="2024-11-11T22:14:20 EST" duration-ms="737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:20 EST" name="queuePage" finished-at="2024-11-11T22:14:21 EST" duration-ms="655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:21 EST" name="treePage" finished-at="2024-11-11T22:14:22 EST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:22 EST" name="backtoQueue" finished-at="2024-11-11T22:14:23 EST" duration-ms="813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:23 EST" name="queuePage" finished-at="2024-11-11T22:14:23 EST" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:23 EST" name="treePageT1" finished-at="2024-11-11T22:14:25 EST" duration-ms="1335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:25 EST" name="backtoQueue" finished-at="2024-11-11T22:14:25 EST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:25 EST" name="queuePage" finished-at="2024-11-11T22:14:26 EST" duration-ms="765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:26 EST" name="treePageT2" finished-at="2024-11-11T22:14:27 EST" duration-ms="1266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:27 EST" name="backtoQueue" finished-at="2024-11-11T22:14:28 EST" duration-ms="695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:28 EST" name="queuePage" finished-at="2024-11-11T22:14:29 EST" duration-ms="788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:29 EST" name="treePageT3" finished-at="2024-11-11T22:14:30 EST" duration-ms="1306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:30 EST" name="backtoQueue" finished-at="2024-11-11T22:14:31 EST" duration-ms="762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:31 EST" name="queuePage" finished-at="2024-11-11T22:14:32 EST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="treePageT4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:32 EST" name="treePageT4" finished-at="2024-11-11T22:14:33 EST" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:33 EST" name="backtoQueue" finished-at="2024-11-11T22:14:34 EST" duration-ms="747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:34 EST" name="queuePage" finished-at="2024-11-11T22:14:35 EST" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic1()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:35 EST" name="tryHereTopic1" finished-at="2024-11-11T22:14:36 EST" duration-ms="1418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:36 EST" name="backtoQueue" finished-at="2024-11-11T22:14:37 EST" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:37 EST" name="queuePage" finished-at="2024-11-11T22:14:38 EST" duration-ms="755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic2()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:38 EST" name="tryHereTopic2" finished-at="2024-11-11T22:14:39 EST" duration-ms="1293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:39 EST" name="backtoQueue" finished-at="2024-11-11T22:14:40 EST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:40 EST" name="queuePage" finished-at="2024-11-11T22:14:41 EST" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic3()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:41 EST" name="tryHereTopic3" finished-at="2024-11-11T22:14:42 EST" duration-ms="1582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:42 EST" name="backtoQueue" finished-at="2024-11-11T22:14:43 EST" duration-ms="836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:43 EST" name="queuePage" finished-at="2024-11-11T22:14:44 EST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="tryHereTopic4()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:44 EST" name="tryHereTopic4" finished-at="2024-11-11T22:14:45 EST" duration-ms="1384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereTopic4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:45 EST" name="backtoQueue" finished-at="2024-11-11T22:14:46 EST" duration-ms="767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:46 EST" name="queuePage" finished-at="2024-11-11T22:14:47 EST" duration-ms="769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT1(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:47 EST" name="validCodeT1" data-provider="Python Code" finished-at="2024-11-11T22:14:48 EST" duration-ms="1645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT1 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:48 EST" name="backtoQueue" finished-at="2024-11-11T22:14:49 EST" duration-ms="814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:49 EST" name="queuePage" finished-at="2024-11-11T22:14:50 EST" duration-ms="663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT2(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:50 EST" name="validCodeT2" data-provider="Python Code" finished-at="2024-11-11T22:14:52 EST" duration-ms="1643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT2 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:52 EST" name="backtoQueue" finished-at="2024-11-11T22:14:52 EST" duration-ms="652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:52 EST" name="queuePage" finished-at="2024-11-11T22:14:53 EST" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT3(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:53 EST" name="validCodeT3" data-provider="Python Code" finished-at="2024-11-11T22:14:55 EST" duration-ms="1657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT3 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:55 EST" name="backtoQueue" finished-at="2024-11-11T22:14:55 EST" duration-ms="813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="queuePage()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:55 EST" name="queuePage" finished-at="2024-11-11T22:14:56 EST" duration-ms="767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method signature="validCodeT4(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:56 EST" name="validCodeT4" data-provider="Python Code" finished-at="2024-11-11T22:14:58 EST" duration-ms="1594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeT4 -->
        <test-method is-config="true" signature="backtoQueue()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:58 EST" name="backtoQueue" finished-at="2024-11-11T22:14:59 EST" duration-ms="815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtoQueue -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.QueuePageEvents@5ca17ab0]" started-at="2024-11-11T22:14:59 EST" name="Logout" finished-at="2024-11-11T22:14:59 EST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- pageTestEvents.QueuePageEvents -->
      <class name="pageTestEvents.GraphPageEvents">
        <test-method is-config="true" signature="setUP()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:28 EST" name="setUP" finished-at="2024-11-11T22:09:30 EST" duration-ms="1662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method is-config="true" signature="Login()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:30 EST" name="Login" finished-at="2024-11-11T22:09:31 EST" duration-ms="977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:31 EST" name="graphPage" finished-at="2024-11-11T22:09:31 EST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="arrayPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:32 EST" name="arrayPage" finished-at="2024-11-11T22:09:32 EST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:32 EST" name="backtograph" finished-at="2024-11-11T22:09:32 EST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:32 EST" name="graphPage" finished-at="2024-11-11T22:09:32 EST" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="arrayPageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:32 EST" name="arrayPageT1" finished-at="2024-11-11T22:09:33 EST" duration-ms="441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:33 EST" name="backtograph" finished-at="2024-11-11T22:09:33 EST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:33 EST" name="graphPage" finished-at="2024-11-11T22:09:33 EST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="arrayPageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:33 EST" name="arrayPageT2" finished-at="2024-11-11T22:09:34 EST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayPageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:34 EST" name="backtograph" finished-at="2024-11-11T22:09:34 EST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:34 EST" name="graphPage" finished-at="2024-11-11T22:09:34 EST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphDdropDown()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:34 EST" name="graphDdropDown" finished-at="2024-11-11T22:09:34 EST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphDdropDown -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:34 EST" name="backtograph" finished-at="2024-11-11T22:09:34 EST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:34 EST" name="graphPage" finished-at="2024-11-11T22:09:35 EST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphDdropDownT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:35 EST" name="graphDdropDownT1" finished-at="2024-11-11T22:09:35 EST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphDdropDownT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:35 EST" name="backtograph" finished-at="2024-11-11T22:09:35 EST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:35 EST" name="graphPage" finished-at="2024-11-11T22:09:36 EST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphDdropDownT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:36 EST" name="graphDdropDownT2" finished-at="2024-11-11T22:09:36 EST" duration-ms="410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphDdropDownT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:36 EST" name="backtograph" finished-at="2024-11-11T22:09:36 EST" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:36 EST" name="graphPage" finished-at="2024-11-11T22:09:36 EST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="invalidCodeGraph(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:36 EST" name="invalidCodeGraph" data-provider="Python Code" finished-at="2024-11-11T22:09:37 EST" duration-ms="744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:37 EST" name="backtograph" finished-at="2024-11-11T22:09:37 EST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:37 EST" name="graphPage" finished-at="2024-11-11T22:09:38 EST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="invalidCodeGraphRep(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:38 EST" name="invalidCodeGraphRep" data-provider="Python Code" finished-at="2024-11-11T22:09:38 EST" duration-ms="481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCodeGraphRep -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:38 EST" name="backtograph" finished-at="2024-11-11T22:09:39 EST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:39 EST" name="graphPage" finished-at="2024-11-11T22:09:39 EST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="linkedListPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:39 EST" name="linkedListPage" finished-at="2024-11-11T22:09:39 EST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:39 EST" name="backtograph" finished-at="2024-11-11T22:09:39 EST" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:39 EST" name="graphPage" finished-at="2024-11-11T22:09:40 EST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="linkedListPageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:40 EST" name="linkedListPageT1" finished-at="2024-11-11T22:09:40 EST" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:40 EST" name="backtograph" finished-at="2024-11-11T22:09:41 EST" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:41 EST" name="graphPage" finished-at="2024-11-11T22:09:41 EST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="linkedListPageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:41 EST" name="linkedListPageT2" finished-at="2024-11-11T22:09:41 EST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkedListPageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:41 EST" name="backtograph" finished-at="2024-11-11T22:09:42 EST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:42 EST" name="graphPage" finished-at="2024-11-11T22:09:42 EST" duration-ms="332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="nocodeGraph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:42 EST" name="nocodeGraph" finished-at="2024-11-11T22:09:43 EST" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:43 EST" name="backtograph" finished-at="2024-11-11T22:09:43 EST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:43 EST" name="graphPage" finished-at="2024-11-11T22:09:43 EST" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="nocodeGraphRepresentation()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:43 EST" name="nocodeGraphRepresentation" finished-at="2024-11-11T22:09:44 EST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nocodeGraphRepresentation -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:44 EST" name="backtograph" finished-at="2024-11-11T22:09:44 EST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:44 EST" name="graphPage" finished-at="2024-11-11T22:09:44 EST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="practiceQueT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:44 EST" name="practiceQueT1" finished-at="2024-11-11T22:09:45 EST" duration-ms="517" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Graph] but found [Practice Questions]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Graph] but found [Practice Questions]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.GraphPageEvents.practiceQueT1(GraphPageEvents.java:163)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQueT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:45 EST" name="backtograph" finished-at="2024-11-11T22:09:45 EST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:45 EST" name="graphPage" finished-at="2024-11-11T22:09:46 EST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="practiceQueT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:46 EST" name="practiceQueT2" finished-at="2024-11-11T22:09:46 EST" duration-ms="444" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Graph] but found [Practice Questions]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Graph] but found [Practice Questions]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at pageTestEvents.GraphPageEvents.practiceQueT2(GraphPageEvents.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- practiceQueT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:46 EST" name="backtograph" finished-at="2024-11-11T22:09:47 EST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:47 EST" name="graphPage" finished-at="2024-11-11T22:09:47 EST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="queuePage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:47 EST" name="queuePage" finished-at="2024-11-11T22:09:47 EST" duration-ms="374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:47 EST" name="backtograph" finished-at="2024-11-11T22:09:48 EST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:48 EST" name="graphPage" finished-at="2024-11-11T22:09:48 EST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="queuePageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:48 EST" name="queuePageT1" finished-at="2024-11-11T22:09:49 EST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:49 EST" name="backtograph" finished-at="2024-11-11T22:09:49 EST" duration-ms="371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:49 EST" name="graphPage" finished-at="2024-11-11T22:09:49 EST" duration-ms="368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="queuePageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:49 EST" name="queuePageT2" finished-at="2024-11-11T22:09:50 EST" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queuePageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:50 EST" name="backtograph" finished-at="2024-11-11T22:09:50 EST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:50 EST" name="graphPage" finished-at="2024-11-11T22:09:51 EST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="stackPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:51 EST" name="stackPage" finished-at="2024-11-11T22:09:51 EST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:51 EST" name="backtograph" finished-at="2024-11-11T22:09:52 EST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:52 EST" name="graphPage" finished-at="2024-11-11T22:09:52 EST" duration-ms="417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="stackPageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:52 EST" name="stackPageT1" finished-at="2024-11-11T22:09:53 EST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:53 EST" name="backtograph" finished-at="2024-11-11T22:09:53 EST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:53 EST" name="graphPage" finished-at="2024-11-11T22:09:54 EST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="stackPageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:54 EST" name="stackPageT2" finished-at="2024-11-11T22:09:54 EST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stackPageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:54 EST" name="backtograph" finished-at="2024-11-11T22:09:55 EST" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:55 EST" name="graphPage" finished-at="2024-11-11T22:09:55 EST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="treePage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:55 EST" name="treePage" finished-at="2024-11-11T22:09:55 EST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePage -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:55 EST" name="backtograph" finished-at="2024-11-11T22:09:56 EST" duration-ms="430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:56 EST" name="graphPage" finished-at="2024-11-11T22:09:56 EST" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="treePageT1()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:56 EST" name="treePageT1" finished-at="2024-11-11T22:09:57 EST" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT1 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:57 EST" name="backtograph" finished-at="2024-11-11T22:09:57 EST" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:57 EST" name="graphPage" finished-at="2024-11-11T22:09:58 EST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="treePageT2()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:58 EST" name="treePageT2" finished-at="2024-11-11T22:09:59 EST" duration-ms="721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- treePageT2 -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:59 EST" name="backtograph" finished-at="2024-11-11T22:09:59 EST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:09:59 EST" name="graphPage" finished-at="2024-11-11T22:10:00 EST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="tryHereGraph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:00 EST" name="tryHereGraph" finished-at="2024-11-11T22:10:00 EST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:00 EST" name="backtograph" finished-at="2024-11-11T22:10:01 EST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:01 EST" name="graphPage" finished-at="2024-11-11T22:10:01 EST" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="tryHereGraphRepresentation()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:01 EST" name="tryHereGraphRepresentation" finished-at="2024-11-11T22:10:02 EST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tryHereGraphRepresentation -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:02 EST" name="backtograph" finished-at="2024-11-11T22:10:02 EST" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:02 EST" name="graphPage" finished-at="2024-11-11T22:10:03 EST" duration-ms="538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="validCodeGraph(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:03 EST" name="validCodeGraph" data-provider="Python Code" finished-at="2024-11-11T22:10:04 EST" duration-ms="943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeGraph -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:04 EST" name="backtograph" finished-at="2024-11-11T22:10:05 EST" duration-ms="565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:05 EST" name="graphPage" finished-at="2024-11-11T22:10:05 EST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="validCodeGraphRep(java.lang.String,java.lang.String)[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:05 EST" name="validCodeGraphRep" data-provider="Python Code" finished-at="2024-11-11T22:10:06 EST" duration-ms="1017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[print'Hello']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[printhello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCodeGraphRep -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:06 EST" name="backtograph" finished-at="2024-11-11T22:10:07 EST" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:07 EST" name="graphPage" finished-at="2024-11-11T22:10:07 EST" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphTopic()[pri:1, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:07 EST" name="graphTopic" finished-at="2024-11-11T22:10:07 EST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphTopic -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:07 EST" name="backtograph" finished-at="2024-11-11T22:10:08 EST" duration-ms="556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="graphPage()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:08 EST" name="graphPage" finished-at="2024-11-11T22:10:09 EST" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphPage -->
        <test-method signature="graphRepresentationTopic()[pri:2, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:09 EST" name="graphRepresentationTopic" finished-at="2024-11-11T22:10:09 EST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- graphRepresentationTopic -->
        <test-method is-config="true" signature="backtograph()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:09 EST" name="backtograph" finished-at="2024-11-11T22:10:10 EST" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backtograph -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:10:10 EST" name="Logout" finished-at="2024-11-11T22:10:10 EST" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:pageTestEvents.GraphPageEvents@16afbd92]" started-at="2024-11-11T22:17:40 EST" name="tearDown" finished-at="2024-11-11T22:17:40 EST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- pageTestEvents.GraphPageEvents -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
